{"version":3,"sources":["webpack:///./docs/home.md"],"names":["_interopRequireDefault","__webpack_require__","_react","_interopRequireWildcard","_jsx","PluginProvider","_ref","plugins","name","options","children","props","_objectWithoutProperties","Plugin","pluginOptions","component","default","createElement","_extends","_ref2","lazyComponent","provider","_class","_temp","React","Component","[object Object]","args","super","_defineProperty","this","Comp","componentDidMount","state","shouldLoad","then","c","setState","render","e","bind","className"],"mappings":"4JAEMA,EAAAC,EAAA,UACAC,ySAAAC,CAAAF,EAAA,IACAD,EAAAC,EAAA,IAgGFD,EAAAC,EAAA,uqCAhCSG,EAAA,UALX,MAAMC,EAAiBC,IAAkD,IAAjDC,QAACA,EAADC,KAAUA,EAAVC,QAAgBA,EAAhBC,SAAyBA,GAAwBJ,EAAXK,EAAWC,EAAAN,EAAA,yCACnEO,EAASN,EAAQC,GACrB,MAAMM,EAAgBD,EAAOJ,QAE7B,OAAKI,GAILA,EAASA,EAAOE,UAEdb,EAAAc,QAAAC,cAACJ,EAADK,EAAA,GACMJ,EADN,CAEEL,QAASA,EAAUA,EAAQA,QAAU,IAChCA,EAAUA,EAAQE,MAAQA,EAHjC,CAIED,SAAUA,EACVH,QAASA,MAVXY,GA+EJ,MAAMC,EAAgBC,IAAQ,IAAAC,EAAAC,EAAA,OAAAA,EAAAD,EAC5B,cAAcE,UAAMC,UAAUC,eAAAC,GAAAC,SAAAD,GAAAE,EAAAC,KAAA,QAKpB,CACNC,KAAM,OAGRC,qBACOF,KAAKG,MAAMF,MAAQD,KAAKnB,MAAMuB,YACjCb,IAAWc,KAAKC,IACdN,KAAKO,SAAS,CACZN,KAAMK,EAAEpB,YAMhBsB,SACE,MAAMP,KAAEA,GAASD,KAAKG,MACtB,OAAOF,EAAOP,UAAMP,cAAcc,EAAMD,KAAKnB,MAAOmB,KAAKnB,MAAMD,UAAY,MAAQ,OAtB3DmB,EAAAP,EAAA,eAEJ,CACpBY,YAAY,IAHYX,GA2BbH,EAAc,IAAMnB,EAAAsC,EAAA,IAAAJ,KAAAlC,EAAAuC,KAAA,YACdpB,EAAc,IAAMnB,EAAAsC,EAAA,IAAAJ,KAAAlC,EAAAuC,KAAA,kBAGxB7B,GACfP,EAAA,gBAGIA,EAAA,OAAKqC,UAAU,SAAf,EACErC,EAACC,EAAD,CACEG,KAAK,OACLD,QAASI,EAAMJ,QACfE,QAAS,CAACA,QAAU,GAAGE,MAAQ","file":"home.js","sourcesContent":["\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto/','home.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const homePage = props => (\n      <div>\n        \n\n          <div className=\"\">\n            <PluginProvider\n              name='home'\n              plugins={props.plugins}\n              options={{\"options\":[],\"props\":{}}}\n            >\n        \n          </PluginProvider>\n        </div>\n      \n      </div>\n    );\n\n    export default homePage;\n  \n    "],"sourceRoot":""}