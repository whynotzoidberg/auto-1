{"version":3,"sources":["webpack:///./docs/blog/pr-in-progress.md"],"names":["_path","_interopRequireDefault","__webpack_require__","_react","_interopRequireWildcard","_classnames","_reactIdealImage","Link","props","to","rest","_objectWithoutProperties","includes","default","createElement","_extends","href","path","join","onClick","e","preventDefault","location","URL","window","origin","history","pushState","Location","pathname","hash","query","getLocation","popStateEvent","CustomEvent","detail","dispatchEvent","defaultProps","imageSources","//www.gravatar.com/avatar/ff725a631f869cdb78beeb003825bb40","Promise","resolve","src","preSrc","height","width","https://i.giphy.com/media/l4HodBpDmoMA5p9bG/200w.webp","../images/pr-to-pr.png","then","t","bind","LazyImageComponent","React","Component","[object Object]","args","super","_defineProperty","this","image","ImageProvider","componentDidMount","state","c","setState","render","className","placeholder","lqip","srcSet","images","map","i","_objectSpread","_jsx","lazyComponent","provider","_class","_temp","Comp","shouldLoad","children","alt","atIndex","configuration","setBlogHero","heroUrl","stub","_ref3","_ref4","currentPage","target","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","_ref25","_ref26","_ref27"],"mappings":"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","file":"pr-in-progress.js","sourcesContent":["\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto/','blog/pr-in-progress.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = { '//www.gravatar.com/avatar/ff725a631f869cdb78beeb003825bb40': () => Promise.resolve({\n              default: {\n                src: { src: 'http://www.gravatar.com/avatar/ff725a631f869cdb78beeb003825bb40' },\n                preSrc: 'http://www.gravatar.com/avatar/ff725a631f869cdb78beeb003825bb40',\n                height: 80,\n                width: 80\n              }\n            }),'https://i.giphy.com/media/l4HodBpDmoMA5p9bG/200w.webp': () => Promise.resolve({\n              default: {\n                src: { src: 'https://i.giphy.com/media/l4HodBpDmoMA5p9bG/200w.webp' },\n                preSrc: 'https://i.giphy.com/media/l4HodBpDmoMA5p9bG/200w.webp',\n                height: 200,\n                width: 200\n              }\n            }),\n      '../images/pr-to-pr.png': () => import(\n        /* webpackChunkName: \"image-pr-to-pr.png\" */\n        '.././images/pr-to-pr.png'\n      )\n     };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    class blogPost extends React.Component {\n      componentDidMount() {\n        if (!this.props.atIndex) {\n          window.configuration.setBlogHero('https://images.unsplash.com/photo-1554520735-0a6b8b6ce8b7?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1200&h=600&fit=crop&ixid=eyJhcHBfaWQiOjF9');\n        }\n      }\n\n      render() {\n        return  (\n          <div className={makeClass('blogPost', this.props.className)}>\n            <p>{this.props.heroUrl}</p>\n            <section>\n              {this.props.stub ? \n    <div className=\"card\">\n      <div className=\"card-content\"><div className=\"media blogHeader\">\n      \n      <div className=\"media-content has-text-centered\">\n        <LazyImageComponent src=\"//www.gravatar.com/avatar/ff725a631f869cdb78beeb003825bb40\" className=\"authorImage\"/>\n\n        <p className=\"title blogTitle\">\n          Merging PRs to other PRs\n        </p>\n        <p className=\"subtitle is-6 blogSubtitle\">\n          <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://twitter.com/HipsterSmoothie\">Andrew Lisowski</Link>\n        <span> on May 4, 2019<span/></span></p>\n      </div>\n    </div>\n        <div className=\"blogBody\">\n          \n        <p>Sometimes you are working on a big feature and you know it will require a lot of changes. These types of pull requests can be a nightmare to review. Taking in all the changes at once can be overwhelming. It makes it easy to miss smaller mistakes and can make it hard to guess the intent of the changes. Multiple features, bug fixes, or even breaking changes may make up this large PR.</p><p>One way to manage this problem is by making a PR to the large PR. Other contributors can review a smaller subset of changes and also follow along with development. In previous versions of <code>auto</code>, large PRs would not be represented well in the changelog and release notes. It would only include the main PR that got merged into master as the only changelog note.</p><p>But thanks to <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://github.com/intuit/auto/pull/359\" className=\"external-link\">this PR</Link> that isn&apos;t true anymore! Now when you merge one PR to another both changes will be represented in the changelog.</p>\n      <div className=\"has-text-centered learnMore\">\n        <Link to=\"/auto/blog/pr-in-progress.html\">\n          Read More\n        </Link>\n      </div>\n    </div>\n      </div>\n    </div>    \n   : \n    <div className=\"card\">\n      <div className=\"card-content\"><div className=\"media blogHeader\">\n      \n      <div className=\"media-content has-text-centered\">\n        <LazyImageComponent src=\"//www.gravatar.com/avatar/ff725a631f869cdb78beeb003825bb40\" className=\"authorImage\"/>\n\n        <p className=\"title blogTitle\">\n          Merging PRs to other PRs\n        </p>\n        <p className=\"subtitle is-6 blogSubtitle\">\n          <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://twitter.com/HipsterSmoothie\">Andrew Lisowski</Link>\n        <span> on May 4, 2019<span/></span></p>\n      </div>\n    </div>\n        <div className=\"blogBody\">\n          \n        <div>\n    \n  <p>Sometimes you are working on a big feature and you know it will require a lot of changes. These types of pull requests can be a nightmare to review. Taking in all the changes at once can be overwhelming. It makes it easy to miss smaller mistakes and can make it hard to guess the intent of the changes. Multiple features, bug fixes, or even breaking changes may make up this large PR.</p>\n<p>One way to manage this problem is by making a PR to the large PR. Other contributors can review a smaller subset of changes and also follow along with development. In previous versions of <code>auto</code>, large PRs would not be represented well in the changelog and release notes. It would only include the main PR that got merged into master as the only changelog note.</p>\n<p>But thanks to <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://github.com/intuit/auto/pull/359\" className=\"external-link\">this PR</Link> that isn&apos;t true anymore! Now when you merge one PR to another both changes will be represented in the changelog.</p>\n<p className=\"smallImage\"><LazyImageComponent src=\"https://i.giphy.com/media/l4HodBpDmoMA5p9bG/200w.webp\" alt=\"Clapping\"/></p>\n<p className=\"has-text-centered\"><em>Score!</em></p>\n<hr/>\n<p>For example in <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://github.com/intuit/auto/pull/351\" className=\"external-link\">PR #351</Link> we changed what happens when you call <code>shipit</code> from a PR. Previously if you called <code>shipit</code> it would create a new release and publish it to the <code>latest</code> tag. The PR made it so <code>shipit</code> would create a canary release when run in a PR and only publish to latest from the <code>master</code> branch.</p>\n<p>Another <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://github.com/zephraph\" className=\"external-link\">contributor</Link> to the project pointed out that some users might not be using <code>master</code> as their base branch, so the <code>baseBranch</code> should be configurable.</p>\n<p>Instead of waiting for #351 to get merged to write the <code>baseBranch</code> functionality, I could make a PR to #351 and both PRs would be represented in the changelog!</p>\n<p><LazyImageComponent src=\"../images/pr-to-pr.png\" alt=\"Sample release notes\"/></p>\n<hr/>\n<p>Now you can be a little more creative with how you manage large PR and have even more detailed changelogs.</p>\n</div></div>\n      </div>\n    </div>    \n  }\n            </section>\n          </div>\n        );\n      }\n    }\n\n    export default blogPost;\n  \n    "],"sourceRoot":""}