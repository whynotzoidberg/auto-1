(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{67:function(e,a,s){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var o,r=n(s(3)),i=function(e){if(e&&e.__esModule)return e;var a={};if(null!=e)for(var s in e)if(Object.prototype.hasOwnProperty.call(e,s)){var o=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,s):{};o.get||o.set?Object.defineProperty(a,s,o):a[s]=e[s]}return a.default=e,a}(s(0));n(s(2)),n(s(114));function n(e){return e&&e.__esModule?e:{default:e}}function t(e,a,s,r){o||(o="function"==typeof Symbol&&Symbol.for&&Symbol.for("react.element")||60103);var i=e&&e.defaultProps,n=arguments.length-3;if(a||0===n||(a={children:void 0}),a&&i)for(var t in i)void 0===a[t]&&(a[t]=i[t]);else a||(a=i||{});if(1===n)a.children=r;else if(n>1){for(var l=new Array(n),d=0;d<n;d++)l[d]=arguments[d+3];a.children=l}return{$$typeof:o,type:e,key:void 0===s?null:""+s,ref:null,props:a,_owner:null}}function l(e,a,s){return a in e?Object.defineProperty(e,a,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[a]=s,e}function d(){return(d=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var s=arguments[a];for(var o in s)Object.prototype.hasOwnProperty.call(s,o)&&(e[o]=s[o])}return e}).apply(this,arguments)}function h(e,a){if(null==e)return{};var s,o,r=function(e,a){if(null==e)return{};var s,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)s=i[o],a.indexOf(s)>=0||(r[s]=e[s]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)s=i[o],a.indexOf(s)>=0||Object.prototype.propertyIsEnumerable.call(e,s)&&(r[s]=e[s])}return r}const c=e=>{let{to:a}=e,s=h(e,["to"]);return a.includes("http")?i.default.createElement("a",d({},e,{href:a})):("#"===a[0]&&(a=r.default.join("/auto/","pages/writing-plugins.html")+a),i.default.createElement("a",d({},s,{href:a,onClick:s=>{if(s.preventDefault(),"#"===e.to)return!1;const o=new URL(r.default.join(window.location.origin,a));window.history.pushState((e=>({href:e.href,pathname:e.pathname,hash:e.hash,query:e.query}))(o),null,a),e.onClick();const i=new CustomEvent("changeLocation",{detail:o});return dispatchEvent(i),!1}})))};c.defaultProps={href:"",onClick:()=>{}};const m=e=>{var a,s;return s=a=class extends i.default.Component{constructor(...e){super(...e),l(this,"state",{Comp:null})}componentDidMount(){!this.state.Comp&&this.props.shouldLoad&&e().then(e=>{this.setState({Comp:e.default})})}render(){const{Comp:e}=this.state;return e?i.default.createElement(e,this.props,this.props.children||null):null}},l(a,"defaultProps",{shouldLoad:!0}),s};m(()=>s.e(27).then(s.bind(null,115))),m(()=>s.e(27).then(s.bind(null,116)));var p=t("h1",{},void 0,"Writing Plugins"),g=t("p",{},void 0,"If you've ever written a ",t("code",{},void 0,"webpack")," plugin it's a lot like that."),v=t("p",{},void 0,"A plugin definition is:"),u=t("li",{},void 0,"a class the has an ",t("code",{},void 0,"apply")," function where a plugin hooks into various functions in auto (REQUIRED)"),b=t("li",{},void 0,"a constructor where you can load plugin specific config"),N=t("pre",{},void 0,t("code",{className:"language-ts"},void 0,t("span",{className:"hljs-keyword"},void 0,"import")," { Auto, IPlugin } ",t("span",{className:"hljs-keyword"},void 0,"from")," ",t("span",{className:"hljs-string"},void 0,"'auto'"),";",t("br",{}),t("br",{}),t("span",{className:"hljs-keyword"},void 0,"export")," ",t("span",{className:"hljs-keyword"},void 0,"default")," ",t("span",{className:"hljs-keyword"},void 0,"class")," TestPlugin ",t("span",{className:"hljs-keyword"},void 0,"implements")," IPlugin {",t("br",{}),"  name = ",t("span",{className:"hljs-string"},void 0,"'test'"),";",t("br",{}),t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"private")," readonly config: ",t("span",{className:"hljs-built_in"},void 0,"any"),";",t("br",{}),t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"constructor"),"(",t("span",{className:"hljs-params"},void 0,"config: ",t("span",{className:"hljs-built_in"},void 0,"any")),") {",t("br",{}),"    ",t("span",{className:"hljs-keyword"},void 0,"this"),".config = config;",t("br",{}),"  }",t("br",{}),t("br",{}),"  apply(auto: Auto) {",t("br",{}),"    ",t("span",{className:"hljs-comment"},void 0,"// hook into auto"),t("br",{}),"  }",t("br",{}),"}",t("br",{}))),f=t("p",{},void 0,"Or in JavaScript:"),j=t("pre",{},void 0,t("code",{className:"language-js"},void 0,t("span",{className:"hljs-built_in"},void 0,"module"),".exports = ",t("span",{className:"hljs-class"},void 0,t("span",{className:"hljs-keyword"},void 0,"class")," ",t("span",{className:"hljs-title"},void 0,"TestPlugin")," "),"{",t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"constructor"),"(config) {",t("br",{}),"    ",t("span",{className:"hljs-keyword"},void 0,"this"),".config = config;",t("br",{}),"    ",t("span",{className:"hljs-keyword"},void 0,"this"),".name = ",t("span",{className:"hljs-string"},void 0,"'test'"),";",t("br",{}),"  }",t("br",{}),t("br",{}),"  ",t("span",{className:"hljs-comment"},void 0,"/**",t("br",{}),"   * Setup the plugin",t("br",{}),"   * @param {import('@auto-it/core').default} auto",t("br",{}),"   */"),t("br",{}),"  apply(auto) {",t("br",{}),"    ",t("span",{className:"hljs-comment"},void 0,"// hook into auto"),t("br",{}),"  }",t("br",{}),"};",t("br",{}))),k=t("p",{},void 0,"In the constructor you have access to any plugin specific config provided in the ",t("code",{},void 0,".autorc"),". It might be useful to write a more type-safe interface for your config."),y=t("pre",{},void 0,t("code",{className:"language-ts"},void 0,t("span",{className:"hljs-keyword"},void 0,"import")," { Auto, IPlugin } ",t("span",{className:"hljs-keyword"},void 0,"from")," ",t("span",{className:"hljs-string"},void 0,"'auto'"),";",t("br",{}),t("br",{}),t("span",{className:"hljs-keyword"},void 0,"interface")," ITestPluginConfig {",t("br",{}),"  foo?: ",t("span",{className:"hljs-built_in"},void 0,"string"),";",t("br",{}),"  bar?: ",t("span",{className:"hljs-built_in"},void 0,"boolean"),";",t("br",{}),"}",t("br",{}),t("br",{}),t("span",{className:"hljs-keyword"},void 0,"export")," ",t("span",{className:"hljs-keyword"},void 0,"default")," ",t("span",{className:"hljs-keyword"},void 0,"class")," TestPlugin ",t("span",{className:"hljs-keyword"},void 0,"implements")," IPlugin {",t("br",{}),"  name = ",t("span",{className:"hljs-string"},void 0,"'test'"),";",t("br",{}),t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"private")," readonly config: ITestPluginConfig;",t("br",{}),t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"constructor"),"(",t("span",{className:"hljs-params"},void 0,"config: ITestPluginConfig"),") {",t("br",{}),"    ",t("span",{className:"hljs-keyword"},void 0,"this"),".config = config;",t("br",{}),"  }",t("br",{}),"}",t("br",{}))),w=t("p",{},void 0,"Plugins work by hooking into various actions that ",t("code",{},void 0,"auto")," has to do in order to facilitate a release or interact with your GitHub repo. The hooks that it exposes are:"),P=t("hr",{}),C=t("p",{},void 0,"Happens before anything is done. This is a great place to check for platform specific secrets such as a npm token."),T=t("pre",{},void 0,t("code",{className:"language-ts"},void 0,"auto.hooks.beforeRun.tapPromise(",t("span",{className:"hljs-string"},void 0,"'NPM'"),", ",t("span",{className:"hljs-keyword"},void 0,"async")," config => {",t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"if")," (!process.env.NPM_TOKEN) {",t("br",{}),"    auto.logger.log.warn(",t("span",{className:"hljs-string"},void 0,"'NPM Token is needed for the NPM plugin!'"),");",t("br",{}),"  }",t("br",{}),"});",t("br",{}))),L=t("p",{},void 0,"Modify what is in the config. You must return the config in this hook."),x=t("pre",{},void 0,t("code",{className:"language-ts"},void 0,"auto.hooks.modifyConfig.tap(",t("span",{className:"hljs-string"},void 0,"'test'"),", ",t("span",{className:"hljs-function"},void 0,t("span",{className:"hljs-params"},void 0,"config")," =>")," {",t("br",{}),"  config.labels.released = {",t("br",{}),"    name: ",t("span",{className:"hljs-string"},void 0,"'released'"),",",t("br",{}),"    description: ",t("span",{className:"hljs-string"},void 0,"'This issue/pull request has been released'"),t("br",{}),"  };",t("br",{}),t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"return")," config;",t("br",{}),"});",t("br",{}))),R=t("code",{},void 0,".autorc"),M=t("pre",{},void 0,t("code",{className:"language-ts"},void 0,"auto.hooks.validateConfig.tapPromise(",t("span",{className:"hljs-string"},void 0,"'test'"),", ",t("span",{className:"hljs-function"},void 0,"(",t("span",{className:"hljs-params"},void 0,"name, options"),") =>")," {",t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"if")," (name === ",t("span",{className:"hljs-keyword"},void 0,"this"),".name || name === `",t("span",{className:"hljs-meta"},void 0,"@auto"),"-it/${",t("span",{className:"hljs-keyword"},void 0,"this"),".name}`) {",t("br",{}),"    ",t("span",{className:"hljs-keyword"},void 0,"return"),"; ",t("span",{className:"hljs-comment"},void 0,"// your validation error. Can either be strings for { path, expectedType, value }"),t("br",{}),"  }",t("br",{}),"});",t("br",{}))),O=t("code",{},void 0,"auto"),S=t("pre",{},void 0,t("code",{className:"language-ts"},void 0,t("span",{className:"hljs-comment"},void 0,"// Types in TypeScript"),t("br",{}),t("span",{className:"hljs-keyword"},void 0,"interface")," Options {",t("br",{}),"  level?: ",t("span",{className:"hljs-built_in"},void 0,"string"),";",t("br",{}),"  user?: ",t("span",{className:"hljs-built_in"},void 0,"string"),";",t("br",{}),"}",t("br",{}),t("br",{}),t("span",{className:"hljs-comment"},void 0,"// The equivalent io-ts code"),t("br",{}),t("span",{className:"hljs-keyword"},void 0,"import")," * ",t("span",{className:"hljs-keyword"},void 0,"as")," t ",t("span",{className:"hljs-keyword"},void 0,"from")," ",t("span",{className:"hljs-string"},void 0,"'io-ts'"),";",t("br",{}),t("br",{}),t("span",{className:"hljs-keyword"},void 0,"const")," pluginOptions = t.partial({",t("br",{}),"  level: t.string,",t("br",{}),"  user: t.string",t("br",{}),"});",t("br",{}),t("br",{}),t("span",{className:"hljs-keyword"},void 0,"export")," ",t("span",{className:"hljs-keyword"},void 0,"type")," Options = t.TypeOf<",t("span",{className:"hljs-keyword"},void 0,"typeof")," pluginOptions>;",t("br",{}))),I=t("p",{},void 0,"Since your type information will now be available at runtime (in ",t("code",{},void 0,"pluginOptions"),") you can use this to validate the configuration! To do this ",t("code",{},void 0,"auto")," exposes a helper function to validate you plugins with the ",t("code",{},void 0,"io-ts")," types."),E=t("pre",{},void 0,t("code",{className:"language-ts"},void 0,t("span",{className:"hljs-keyword"},void 0,"import")," { validatePluginConfiguration } ",t("span",{className:"hljs-keyword"},void 0,"from")," ",t("span",{className:"hljs-string"},void 0,"'@auto-it/core'"),";",t("br",{}),t("br",{}),"auto.hooks.validateConfig.tapPromise(",t("span",{className:"hljs-string"},void 0,"'test'"),", ",t("span",{className:"hljs-function"},void 0,"(",t("span",{className:"hljs-params"},void 0,"name, options"),") =>")," {",t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"if")," (name === ",t("span",{className:"hljs-keyword"},void 0,"this"),".name || name === `",t("span",{className:"hljs-meta"},void 0,"@auto"),"-it/${",t("span",{className:"hljs-keyword"},void 0,"this"),".name}`) {",t("br",{}),"    ",t("span",{className:"hljs-keyword"},void 0,"return")," validatePluginConfiguration(",t("span",{className:"hljs-keyword"},void 0,"this"),".name, pluginOptions, options);",t("br",{}),"  }",t("br",{}),"});",t("br",{}))),V=t("p",{},void 0,"Happens before ",t("code",{},void 0,"shipit")," is run. This is a great way to throw an error if a token or key is not present."),_=t("p",{},void 0,"Context Object:"),A=t("ul",{},void 0,t("li",{},void 0,t("code",{},void 0,"releaseType")," (",t("code",{},void 0,"latest")," | ",t("code",{},void 0,"old")," | ",t("code",{},void 0,"next")," | ",t("code",{},void 0,"canary"),") - The type of release ",t("code",{},void 0,"shipit")," will attempt to make.")),G=t("pre",{},void 0,t("code",{className:"language-ts"},void 0,"auto.hooks.beforeRun.tapPromise(",t("span",{className:"hljs-string"},void 0,"'NPM'"),", ",t("span",{className:"hljs-keyword"},void 0,"async")," context => {",t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"if")," (!process.env.NPM_TOKEN) {",t("br",{}),"    ",t("span",{className:"hljs-keyword"},void 0,"throw")," ",t("span",{className:"hljs-keyword"},void 0,"new")," ",t("span",{className:"hljs-built_in"},void 0,"Error"),"(",t("span",{className:"hljs-string"},void 0,"'NPM Token is needed for the NPM plugin!'"),");",t("br",{}),"  }",t("br",{}),"});",t("br",{}))),H=t("p",{},void 0,"Ran before the ",t("code",{},void 0,"changelog")," command commits the new release notes to ",t("code",{},void 0,"CHANGELOG.md"),". Useful for modifying the changelog as a whole or creating extra ",t("code",{},void 0,"changelog")," files. These files can be apart of the commit that updates the changelog."),$=t("ul",{},void 0,t("li",{},void 0,"bump - the semver bump"),t("li",{},void 0,"commits - the commits in the changelog"),t("li",{},void 0,"currentVersion - version that was just released"),t("li",{},void 0,"lastRelease - the version before the current version"),t("li",{},void 0,"releaseNotes - generated release notes for the release")),F=t("pre",{},void 0,t("code",{className:"language-ts"},void 0,"auto.hooks.beforeCommitChangelog.tap(",t("br",{}),"  ",t("span",{className:"hljs-string"},void 0,"'MyPlugin'"),",",t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"async")," ({ currentVersion, commits, releaseNotes, lastRelease }) => {",t("br",{}),"    ",t("span",{className:"hljs-comment"},void 0,"// do something"),t("br",{}),"  }",t("br",{}),");",t("br",{}))),D=t("p",{},void 0,"Ran after the ",t("code",{},void 0,"changelog")," command adds the new release notes to ",t("code",{},void 0,"CHANGELOG.md"),". Useful for getting extra commits into a release before publishing."),J=t("ul",{},void 0,t("li",{},void 0,"bump - the semver bump"),t("li",{},void 0,"commits - the commits in the changelog"),t("li",{},void 0,"currentVersion - version that was just released"),t("li",{},void 0,"lastRelease - the version before the current version"),t("li",{},void 0,"releaseNotes - generated release notes for the release")),Y=t("pre",{},void 0,t("code",{className:"language-ts"},void 0,"auto.hooks.afterAddToChangelog.tap(",t("br",{}),"  ",t("span",{className:"hljs-string"},void 0,"'MyPlugin'"),",",t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"async")," ({ currentVersion, commits, releaseNotes, lastRelease }) => {",t("br",{}),"    ",t("span",{className:"hljs-comment"},void 0,"// do something"),t("br",{}),"  }",t("br",{}),");",t("br",{}))),z=t("p",{},void 0,"Ran after the ",t("code",{},void 0,"release")," command has run. This async hook gets the following arguments:"),B=t("ul",{},void 0,t("li",{},void 0,t("code",{},void 0,"lastVersion")," - the version that existed prior to the current release"),t("li",{},void 0,t("code",{},void 0,"nextVersion")," - version that was just released"),t("li",{},void 0,t("code",{},void 0,"commits")," - the commits in the release"),t("li",{},void 0,t("code",{},void 0,"releaseNotes")," - generated release notes for the release"),t("li",{},void 0,t("code",{},void 0,"response")," - the response returned from making the release")),U=t("pre",{},void 0,t("code",{className:"language-ts"},void 0,"auto.hooks.afterRelease.tapPromise(",t("br",{}),"  ",t("span",{className:"hljs-string"},void 0,"'MyPlugin'"),",",t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"async")," ({ lastVersion, nextVersion, commits, releaseNotes, response }) => {",t("br",{}),"    ",t("span",{className:"hljs-comment"},void 0,"// do something"),t("br",{}),"  }",t("br",{}),");",t("br",{}))),q=t("p",{},void 0,"Ran when trying to make a release during the ",t("code",{},void 0,"release")," command has run. This async hook gets the following arguments:"),K=t("ul",{},void 0,t("li",{},void 0,t("code",{},void 0,"dryRun")," - Whether this is a dry run"),t("li",{},void 0,t("code",{},void 0,"from")," - Commit to start calculating the version from"),t("li",{},void 0,t("code",{},void 0,"newVersion")," - The version being released"),t("li",{},void 0,t("code",{},void 0,"isPrerelease")," - Whether the release being made is a prerelease"),t("li",{},void 0,t("code",{},void 0,"fullReleaseNotes")," - The generated release notes for all of the commits"),t("li",{},void 0,t("code",{},void 0,"commits")," - The commits included in the release")),W=t("pre",{},void 0,t("code",{className:"language-ts"},void 0,"auto.hooks.makeRelease.tapPromise(",t("span",{className:"hljs-string"},void 0,"'MyPlugin'"),", ",t("span",{className:"hljs-keyword"},void 0,"async")," options => {",t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"if")," (!options.dryRun) {",t("br",{}),"    ",t("span",{className:"hljs-keyword"},void 0,"this"),".logger.log.info(`Releasing ${options.newVersion} to GitHub.`);",t("br",{}),t("br",{}),"    ",t("span",{className:"hljs-keyword"},void 0,"return")," ",t("span",{className:"hljs-keyword"},void 0,"this"),".git!.publish(",t("br",{}),"      options.fullReleaseNotes,",t("br",{}),"      options.newVersion,",t("br",{}),"      options.isPrerelease",t("br",{}),"    );",t("br",{}),"  }",t("br",{}),"});",t("br",{}))),Q=t("p",{},void 0,"Ran after the ",t("code",{},void 0,"shipit")," command has run."),X=t("ul",{},void 0,t("li",{},void 0,t("code",{},void 0,"newVersion")," - The new version that was release"),t("li",{},void 0,t("code",{},void 0,"commits")," - the commits in the release"),t("li",{},void 0,t("code",{},void 0,"data"),t("ul",{},void 0,t("li",{},void 0,t("code",{},void 0,"context")," - The type of release that was created (",t("code",{},void 0,"latest"),", ",t("code",{},void 0,"next"),", ",t("code",{},void 0,"canary"),", or ",t("code",{},void 0,"old"),")")))),Z=t("pre",{},void 0,t("code",{className:"language-ts"},void 0,"auto.hooks.afterShipIt.tap(",t("br",{}),"  ",t("span",{className:"hljs-string"},void 0,"'MyPlugin'"),",",t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"async")," (newVersion, commits, { context }) => {",t("br",{}),"    ",t("span",{className:"hljs-comment"},void 0,"// do something"),t("br",{}),"  }",t("br",{}),");",t("br",{}))),ee=t("p",{},void 0,"Get git author. Typically from a package distribution description file."),ae=t("pre",{},void 0,t("code",{className:"language-ts"},void 0,"auto.hooks.getAuthor.tapPromise(",t("span",{className:"hljs-string"},void 0,"'NPM'"),", ",t("span",{className:"hljs-keyword"},void 0,"async")," () => {",t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"const")," { author } = ",t("span",{className:"hljs-built_in"},void 0,"JSON"),".parse(",t("span",{className:"hljs-keyword"},void 0,"await")," readFile(",t("span",{className:"hljs-string"},void 0,"'package.json'"),", ",t("span",{className:"hljs-string"},void 0,"'utf-8'"),"));",t("br",{}),t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"if")," (author) {",t("br",{}),"    ",t("span",{className:"hljs-keyword"},void 0,"return")," author;",t("br",{}),"  }",t("br",{}),"});",t("br",{}))),se=t("p",{},void 0,"Get the previous version. Typically from a package distribution description file."),oe=t("pre",{},void 0,t("code",{className:"language-ts"},void 0,"auto.hooks.getPreviousVersion.tapPromise(",t("span",{className:"hljs-string"},void 0,"'NPM'"),", ",t("span",{className:"hljs-keyword"},void 0,"async")," () => {",t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"const")," { version } = ",t("span",{className:"hljs-built_in"},void 0,"JSON"),".parse(",t("span",{className:"hljs-keyword"},void 0,"await")," readFile(",t("span",{className:"hljs-string"},void 0,"'package.json'"),", ",t("span",{className:"hljs-string"},void 0,"'utf-8'"),"));",t("br",{}),t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"if")," (version) {",t("br",{}),"    ",t("span",{className:"hljs-keyword"},void 0,"return")," auto.prefixRelease(",t("br",{}),"      ",t("span",{className:"hljs-built_in"},void 0,"JSON"),".parse(",t("span",{className:"hljs-keyword"},void 0,"await")," readFile(",t("span",{className:"hljs-string"},void 0,"'package.json'"),", ",t("span",{className:"hljs-string"},void 0,"'utf-8'"),")).version",t("br",{}),"    );",t("br",{}),"  }",t("br",{}),"});",t("br",{}))),re=t("p",{},void 0,"Get owner and repository. Typically from a package distribution description file."),ie=t("pre",{},void 0,t("code",{className:"language-ts"},void 0,"auto.hooks.getRepository.tapPromise(",t("span",{className:"hljs-string"},void 0,"'NPM'"),", ",t("span",{className:"hljs-keyword"},void 0,"async")," () => {",t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"const")," owner = ",t("span",{className:"hljs-comment"},void 0,"// get the owner from package.json"),t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"const")," repo = ",t("span",{className:"hljs-comment"},void 0,"// get the repo from package.json"),t("br",{}),t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"return")," {",t("br",{}),"    owner,",t("br",{}),"    repo",t("br",{}),"  }",t("br",{}),"});",t("br",{}))),ne=t("p",{},void 0,"Tap into the things the Release class makes. This isn't the same as ",t("code",{},void 0,"auto release"),", but the main class that does most of the work."),te=t("p",{},void 0,"Available hooks:"),le=t("pre",{},void 0,t("code",{className:"language-ts"},void 0,t("span",{className:"hljs-keyword"},void 0,"this"),".hooks.onCreateRelease.tap(",t("span",{className:"hljs-string"},void 0,"'MyPlugin'"),", ",t("span",{className:"hljs-function"},void 0,t("span",{className:"hljs-params"},void 0,"release")," =>")," {",t("br",{}),"  release.hooks.onCreateLogParse.tap(",t("span",{className:"hljs-string"},void 0,"'Change log parseing'"),", ",t("span",{className:"hljs-function"},void 0,t("span",{className:"hljs-params"},void 0,"logParse")," =>"),t("br",{}),"    ",t("span",{className:"hljs-comment"},void 0,"// extend logParse"),t("br",{}),"  );",t("br",{}),t("br",{}),"  release.hooks.onCreateChangelog.tap(",t("br",{}),"    ",t("span",{className:"hljs-string"},void 0,"'Change changelog'"),",",t("br",{}),"    ",t("span",{className:"hljs-function"},void 0,t("span",{className:"hljs-params"},void 0,"changelog")," =>")," {",t("br",{}),"      ",t("span",{className:"hljs-comment"},void 0,"// extend changelog"),t("br",{}),"    }",t("br",{}),"  );",t("br",{}),"});",t("br",{}))),de=t("code",{},void 0,"this.hooks.onCreateRelease"),he=t("code",{},void 0,"this.hooks"),ce=t("code",{},void 0,"this.hooks.onCreateRelease"),me=t("code",{},void 0,"this.hooks"),pe=t("p",{},void 0,"Version the package. This is a good opportunity to ",t("code",{},void 0,"git tag")," the release also. Here ",t("code",{},void 0,"npm")," does it for us."),ge=t("pre",{},void 0,t("code",{className:"language-ts"},void 0,"auto.hooks.version.tapPromise(",t("span",{className:"hljs-string"},void 0,"'NPM'"),", ",t("span",{className:"hljs-keyword"},void 0,"async")," (version: SEMVER) => {",t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"await")," execPromise(",t("span",{className:"hljs-string"},void 0,"'npm'"),", [",t("br",{}),"    ",t("span",{className:"hljs-string"},void 0,"'version'"),",",t("br",{}),"    version,",t("br",{}),"    ",t("span",{className:"hljs-string"},void 0,"'-m'"),",",t("br",{}),"    ",t("span",{className:"hljs-string"},void 0,"'Bump version to: %s [skip ci]'"),t("br",{}),"  ]);",t("br",{}),"});",t("br",{}))),ve=t("p",{},void 0,"Ran after the package has been versioned."),ue=t("p",{},void 0,"Publish the package to some package distributor. You must push the tags to github!"),be=t("pre",{},void 0,t("code",{className:"language-ts"},void 0,"auto.hooks.publish.tapPromise(",t("span",{className:"hljs-string"},void 0,"'NPM'"),", ",t("span",{className:"hljs-keyword"},void 0,"async")," (version: SEMVER) => {",t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"await")," execPromise(",t("span",{className:"hljs-string"},void 0,"'npm'"),", [",t("br",{}),"    ",t("span",{className:"hljs-string"},void 0,"'version'"),",",t("br",{}),"    version,",t("br",{}),"    ",t("span",{className:"hljs-string"},void 0,"'-m'"),",",t("br",{}),"    ",t("span",{className:"hljs-string"},void 0,"'Bump version to: %s [skip ci]'"),t("br",{}),"  ]);",t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"await")," execPromise(",t("span",{className:"hljs-string"},void 0,"'npm'"),", [",t("span",{className:"hljs-string"},void 0,"'publish'"),"]);",t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"await")," execPromise(",t("span",{className:"hljs-string"},void 0,"'git'"),", [",t("br",{}),"    ",t("span",{className:"hljs-string"},void 0,"'push'"),",",t("br",{}),"    ",t("span",{className:"hljs-string"},void 0,"'--follow-tags'"),",",t("br",{}),"    ",t("span",{className:"hljs-string"},void 0,"'--set-upstream'"),",",t("br",{}),"    auto.remote,",t("br",{}),"    ",t("span",{className:"hljs-string"},void 0,"'$branch'"),t("br",{}),"  ]);",t("br",{}),"});",t("br",{}))),Ne=t("p",{},void 0,"Ran after the package has been published."),fe=t("hr",{}),je=t("p",{},void 0,"Used to publish a canary release. In this hook you get the semver bump and the unique canary postfix ID."),ke=t("p",{},void 0,"You can either return a string value of just the version or an object containing the following which will be rendered within and HTML Details element."),ye=t("ul",{},void 0,t("li",{},void 0,t("code",{},void 0,"newVersion")," - The version published in the canary release or a header for the Details element."),t("li",{},void 0,t("code",{},void 0,"Details")," - The body of the Details element")),we=t("pre",{},void 0,t("code",{className:"language-ts"},void 0,"auto.hooks.canary.tapPromise(",t("span",{className:"hljs-keyword"},void 0,"this"),".name, ",t("span",{className:"hljs-keyword"},void 0,"async")," (version, postFix) => {",t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"const")," lastRelease = ",t("span",{className:"hljs-keyword"},void 0,"await")," auto.git!.getLatestRelease();",t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"const")," current = ",t("span",{className:"hljs-keyword"},void 0,"await")," auto.getCurrentVersion(lastRelease);",t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"const")," nextVersion = inc(current, version ",t("span",{className:"hljs-keyword"},void 0,"as")," ReleaseType);",t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"const")," isScopedPackage = name.match(",t("span",{className:"hljs-regexp"},void 0,"/@\\S+\\/\\S+/"),");",t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"const")," canaryVersion = `${nextVersion}-canary${postFix}`;",t("br",{}),t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"await")," execPromise(",t("span",{className:"hljs-string"},void 0,"'npm'"),", [",t("span",{className:"hljs-string"},void 0,"'version'"),", canaryVersion, ",t("span",{className:"hljs-string"},void 0,"'--no-git-tag-version'"),"]);",t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"await")," execPromise(",t("span",{className:"hljs-string"},void 0,"'npm'"),", [",t("span",{className:"hljs-string"},void 0,"'publish'"),", ",t("span",{className:"hljs-string"},void 0,"'--tag'"),", ",t("span",{className:"hljs-string"},void 0,"'canary'"),"]);",t("br",{}),t("br",{}),"  auto.logger.verbose.info(",t("span",{className:"hljs-string"},void 0,"'Successfully published canary version'"),");",t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"return")," canaryVersion;",t("br",{}),"});",t("br",{}))),Pe=t("p",{},void 0,'Add extra content to your changelogs. This hook provide all the current "extra" notes and all of the commits for the changelog. You must return the notes array.'),Ce=t("pre",{},void 0,t("code",{className:"language-ts"},void 0,"auto.hooks.onCreateChangelog.tapPromise(",t("span",{className:"hljs-string"},void 0,"'Giphy'"),", ",t("span",{className:"hljs-function"},void 0,t("span",{className:"hljs-params"},void 0,"changelog")," =>"),t("br",{}),"  changelog.hooks.renderChangelogLine.tapPromise(",t("br",{}),"    ",t("span",{className:"hljs-string"},void 0,"'Giphy'"),",",t("br",{}),"    ",t("span",{className:"hljs-keyword"},void 0,"async")," (notes, commits) => {",t("br",{}),"      ",t("span",{className:"hljs-keyword"},void 0,"const")," response = ",t("span",{className:"hljs-keyword"},void 0,"await")," fetch(`https:",t("span",{className:"hljs-comment"},void 0,"//api.giphy.com/v1/gifs/random?api_key=${process.env.GIPHY_KEY}`);"),t("br",{}),"      ",t("span",{className:"hljs-keyword"},void 0,"const")," json = ",t("span",{className:"hljs-keyword"},void 0,"await")," response.json();",t("br",{}),"      ",t("span",{className:"hljs-keyword"},void 0,"const")," { data: gif } = json;",t("br",{}),t("br",{}),"      ",t("span",{className:"hljs-keyword"},void 0,"return")," [...notes, `![${gif.title}](${gif.url})\\n`]",t("br",{}),"    }",t("br",{}),"  );",t("br",{}),");",t("br",{}))),Te=t("p",{},void 0,"Change how the changelog renders lines. This hook provides the commit and the current state of the line render. You must return the commit and the line string state as a tuple ([commit, line])."),Le=t("p",{},void 0,"The following plugin would change all the bullet points in the changelog to star emojis."),xe=t("pre",{},void 0,t("code",{className:"language-ts"},void 0,"auto.hooks.onCreateChangelog.tapPromise(",t("span",{className:"hljs-string"},void 0,"'Stars'"),", ",t("span",{className:"hljs-function"},void 0,t("span",{className:"hljs-params"},void 0,"changelog")," =>"),t("br",{}),"  changelog.hooks.renderChangelogLine.tapPromise(",t("br",{}),"    ",t("span",{className:"hljs-string"},void 0,"'Stars'"),",",t("br",{}),"    ",t("span",{className:"hljs-keyword"},void 0,"async")," (commit, line) =>",t("br",{}),"      [commit, `${line.replace(",t("span",{className:"hljs-string"},void 0,"'-'"),", ",t("span",{className:"hljs-string"},void 0,"':star:'"),")}\\n`]",t("br",{}),"  );",t("br",{}),");",t("br",{}))),Re=t("p",{},void 0,"Change how the changelog renders titles. The hook provides the current label for the section and all the configured changelog titles."),Me=t("pre",{},void 0,t("code",{className:"language-ts"},void 0,"auto.hooks.onCreateChangelog.tapPromise(",t("span",{className:"hljs-string"},void 0,"'Stars'"),", ",t("span",{className:"hljs-function"},void 0,t("span",{className:"hljs-params"},void 0,"changelog")," =>"),t("br",{}),"  changelog.hooks.renderChangelogTitle.tap(",t("br",{}),"    ",t("span",{className:"hljs-string"},void 0,"'My Titles'"),",",t("br",{}),"    ",t("span",{className:"hljs-function"},void 0,"(",t("span",{className:"hljs-params"},void 0,"label, changelogTitles"),") =>")," `:heart: ${changelogTitles[label]} :heart:`",t("br",{}),"  );",t("br",{}),");",t("br",{}))),Oe=t("p",{},void 0,"Change how the changelog renders authors. This is both the author on each commit note and the user in the author section (the part between parentheses). This is generally a link to some profile."),Se=t("pre",{},void 0,t("code",{className:"language-ts"},void 0,"auto.hooks.onCreateChangelog.tapPromise(",t("span",{className:"hljs-string"},void 0,"'Stars'"),", ",t("span",{className:"hljs-function"},void 0,t("span",{className:"hljs-params"},void 0,"changelog")," =>"),t("br",{}),"  changelog.hooks.renderChangelogAuthor.tap(",t("br",{}),"    ",t("span",{className:"hljs-string"},void 0,"'test'"),",",t("br",{}),"    ",t("span",{className:"hljs-function"},void 0,"(",t("span",{className:"hljs-params"},void 0,"author, commit"),") =>")," `:heart: ${author.name}/${commit.authorEmail} :heart:`",t("br",{}),"  );",t("br",{}),");",t("br",{}))),Ie=t("p",{},void 0,"Change how the changelog renders authors in the authors section. The hook provides the author object and the user created with ",t("code",{},void 0,"renderChangelogAuthor"),". Here is where you might display extra info about the author, such as their full name."),Ee=t("pre",{},void 0,t("code",{className:"language-ts"},void 0,"auto.hooks.onCreateChangelog.tapPromise(",t("span",{className:"hljs-string"},void 0,"'Stars'"),", ",t("span",{className:"hljs-function"},void 0,t("span",{className:"hljs-params"},void 0,"changelog")," =>"),t("br",{}),"  changelog.hooks.renderChangelogAuthorLine.tap(",t("br",{}),"    ",t("span",{className:"hljs-string"},void 0,"'test'"),",",t("br",{}),"    ",t("span",{className:"hljs-function"},void 0,"(",t("span",{className:"hljs-params"},void 0,"author, user"),") =>")," `:shipit: ${author.name} (${user})\\n`",t("br",{}),"  );",t("br",{}),");",t("br",{}))),Ve=t("p",{},void 0,"Control the titles in the ",t("code",{},void 0,"CHANGELOG.md")),_e=t("pre",{},void 0,t("code",{className:"language-ts"},void 0,t("span",{className:"hljs-comment"},void 0,"// Render only the date in the title"),t("br",{}),"auto.hooks.onCreateRelease.tap(",t("span",{className:"hljs-keyword"},void 0,"this"),".name, ",t("span",{className:"hljs-function"},void 0,t("span",{className:"hljs-params"},void 0,"release")," =>")," {",t("br",{}),"  release.hooks.createChangelogTitle.tap(",t("br",{}),"    `${",t("span",{className:"hljs-keyword"},void 0,"this"),".name} - lerna independent`,",t("br",{}),"    ",t("span",{className:"hljs-function"},void 0,t("span",{className:"hljs-params"},void 0,"()")," =>")," ",t("span",{className:"hljs-string"},void 0,"''"),t("br",{}),"  );",t("br",{}),"});",t("br",{}))),Ae=t("hr",{}),Ge=t("p",{},void 0,"Control what commits effect the additional release notes section."),He=t("pre",{},void 0,t("code",{className:"language-ts"},void 0,"auto.hooks.onCreateChangelog.tap(",t("span",{className:"hljs-keyword"},void 0,"this"),".name, ",t("span",{className:"hljs-function"},void 0,t("span",{className:"hljs-params"},void 0,"changelog")," =>")," {",t("br",{}),"  changelog.hooks.omitReleaseNotes.tap(",t("span",{className:"hljs-keyword"},void 0,"this"),".name, ",t("span",{className:"hljs-function"},void 0,t("span",{className:"hljs-params"},void 0,"commit")," =>"),t("br",{}),"    commit.subject.includes(",t("span",{className:"hljs-string"},void 0,"'WIP'"),")",t("br",{}),"  );",t("br",{}),"});",t("br",{}))),$e=t("hr",{}),Fe=t("p",{},void 0,"Parse information about a commit from a commit. Here is where ",t("code",{},void 0,"auto")," gets the PR number from the merge commits."),De=t("pre",{},void 0,t("code",{className:"language-ts"},void 0,"auto.hooks.onCreateLogParse.tapPromise(",t("span",{className:"hljs-string"},void 0,"'Stars'"),", ",t("span",{className:"hljs-function"},void 0,t("span",{className:"hljs-params"},void 0,"logParse")," =>"),t("br",{}),"  logParse.hooks.parseCommit.tap(",t("br",{}),"    ",t("span",{className:"hljs-string"},void 0,"'test'"),",",t("br",{}),"    ",t("span",{className:"hljs-function"},void 0,"(",t("span",{className:"hljs-params"},void 0,"commit"),") =>")," {",t("br",{}),"      ",t("span",{className:"hljs-keyword"},void 0,"const")," bump = getBump(commit.subject, logParse.options.versionLabels);",t("br",{}),"      commit.labels = [bump]",t("br",{}),"      ",t("span",{className:"hljs-keyword"},void 0,"return")," commit;",t("br",{}),"    }",t("br",{}),"  );",t("br",{}),");",t("br",{}))),Je=t("p",{},void 0,"Choose to omit certain commits. If you return true the commit will be omitted. Be sure to return nothing if you don't want the commit omitted."),Ye=t("pre",{},void 0,t("code",{className:"language-ts"},void 0,"auto.hooks.onCreateLogParse.tapPromise(",t("span",{className:"hljs-string"},void 0,"'Stars'"),", ",t("span",{className:"hljs-function"},void 0,t("span",{className:"hljs-params"},void 0,"changelog")," =>"),t("br",{}),"  changelog.hooks.omitCommit.tap(",t("br",{}),"    ",t("span",{className:"hljs-string"},void 0,"'test'"),",",t("br",{}),"    ",t("span",{className:"hljs-function"},void 0,"(",t("span",{className:"hljs-params"},void 0,"commit"),") =>")," {",t("br",{}),"      ",t("span",{className:"hljs-keyword"},void 0,"if")," (someTest(commit.subject)) {",t("br",{}),"        ",t("span",{className:"hljs-keyword"},void 0,"return")," ",t("span",{className:"hljs-literal"},void 0,"true"),";",t("br",{}),"      }",t("br",{}),"    }",t("br",{}),"  );",t("br",{}),");",t("br",{}))),ze=t("p",{},void 0,"Override where/how the rc file is written."),Be=t("pre",{},void 0,t("code",{className:"language-ts"},void 0,t("span",{className:"hljs-keyword"},void 0,"class")," MyPlugin ",t("span",{className:"hljs-keyword"},void 0,"implements")," IPlugin {",t("br",{}),"  init(initializer: InteractiveInit) {",t("br",{}),"    initializer.hooks.writeRcFile.tapPromise(",t("span",{className:"hljs-string"},void 0,"'Example'"),", ",t("span",{className:"hljs-keyword"},void 0,"async")," rc => {",t("br",{}),"      ",t("span",{className:"hljs-comment"},void 0,"// write the file somewhere other than .autorc"),t("br",{}),"      ",t("span",{className:"hljs-keyword"},void 0,"return")," filename;",t("br",{}),"    });",t("br",{}),"  }",t("br",{}),"}",t("br",{}))),Ue=t("p",{},void 0,"Get or verify the repo information."),qe=t("p",{},void 0,"Get or verify the author information."),Ke=t("p",{},void 0,"Run extra configuration for a plugin. Here is where to display prompts to the user."),We=t("pre",{},void 0,t("code",{className:"language-ts"},void 0,t("span",{className:"hljs-keyword"},void 0,"class")," MyPlugin ",t("span",{className:"hljs-keyword"},void 0,"implements")," IPlugin {",t("br",{}),"  init(initializer: InteractiveInit) {",t("br",{}),"    initializer.hooks.configurePlugin.tapPromise(",t("span",{className:"hljs-string"},void 0,"'Example'"),", ",t("span",{className:"hljs-keyword"},void 0,"async")," name => {",t("br",{}),"      ",t("span",{className:"hljs-keyword"},void 0,"if")," (name === ",t("span",{className:"hljs-string"},void 0,"'my-plugins'"),") {",t("br",{}),"        ",t("span",{className:"hljs-keyword"},void 0,"return")," [",t("br",{}),"          name,",t("br",{}),"          {",t("br",{}),"            ",t("span",{className:"hljs-comment"},void 0,"// extra config options"),t("br",{}),"          }",t("br",{}),"        ];",t("br",{}),"      }",t("br",{}),"    });",t("br",{}),"  }",t("br",{}),"}",t("br",{}))),Qe=t("p",{},void 0,"Add environment variables to get from the user"),Xe=t("pre",{},void 0,t("code",{className:"language-ts"},void 0,t("span",{className:"hljs-keyword"},void 0,"class")," MyPlugin ",t("span",{className:"hljs-keyword"},void 0,"implements")," IPlugin {",t("br",{}),"  init(initializer: InteractiveInit) {",t("br",{}),"    initializer.hooks.createEnv.tap(",t("span",{className:"hljs-string"},void 0,"'Example'"),", ",t("span",{className:"hljs-function"},void 0,t("span",{className:"hljs-params"},void 0,"vars")," =>")," [",t("br",{}),"      ...vars,",t("br",{}),"      {",t("br",{}),"        variable: ",t("span",{className:"hljs-string"},void 0,"'MY_TOKEN'"),",",t("br",{}),"        message: `This is a very important secret`",t("br",{}),"      }",t("br",{}),"    ]);",t("br",{}),"  }",t("br",{}),"}",t("br",{}))),Ze=t("p",{},void 0,"To create a plugin simply make a class with an ",t("code",{},void 0,"apply")," method and tap into the hooks you need."),ea=t("pre",{},void 0,t("code",{className:"language-ts"},void 0,t("span",{className:"hljs-keyword"},void 0,"import")," * ",t("span",{className:"hljs-keyword"},void 0,"as")," fs ",t("span",{className:"hljs-keyword"},void 0,"from")," ",t("span",{className:"hljs-string"},void 0,"'fs'"),";",t("br",{}),t("span",{className:"hljs-keyword"},void 0,"import")," { promisify } ",t("span",{className:"hljs-keyword"},void 0,"from")," ",t("span",{className:"hljs-string"},void 0,"'util'"),";",t("br",{}),t("br",{}),t("span",{className:"hljs-keyword"},void 0,"import")," { IAutoHooks, Auto, SEMVER, execPromise } ",t("span",{className:"hljs-keyword"},void 0,"from")," ",t("span",{className:"hljs-string"},void 0,"'auto'"),";",t("br",{}),t("span",{className:"hljs-keyword"},void 0,"import")," getConfigFromPackageJson ",t("span",{className:"hljs-keyword"},void 0,"from")," ",t("span",{className:"hljs-string"},void 0,"'./package-config'"),";",t("br",{}),t("br",{}),t("span",{className:"hljs-keyword"},void 0,"const")," readFile = promisify(fs.readFile);",t("br",{}),t("br",{}),t("span",{className:"hljs-keyword"},void 0,"export")," ",t("span",{className:"hljs-keyword"},void 0,"default")," ",t("span",{className:"hljs-keyword"},void 0,"class")," NPMPlugin {",t("br",{}),"  ",t("span",{className:"hljs-keyword"},void 0,"public")," apply(auto: Auto) {",t("br",{}),"    auto.hooks.getAuthor.tapPromise(",t("span",{className:"hljs-string"},void 0,"'NPM'"),", ",t("span",{className:"hljs-keyword"},void 0,"async")," () => {",t("br",{}),"      ",t("span",{className:"hljs-keyword"},void 0,"const")," { author } = ",t("span",{className:"hljs-built_in"},void 0,"JSON"),".parse(",t("span",{className:"hljs-keyword"},void 0,"await")," readFile(",t("span",{className:"hljs-string"},void 0,"'package.json'"),", ",t("span",{className:"hljs-string"},void 0,"'utf-8'"),"));",t("br",{}),t("br",{}),"      ",t("span",{className:"hljs-keyword"},void 0,"if")," (author) {",t("br",{}),"        auto.logger.log.info(",t("span",{className:"hljs-string"},void 0,"'NPM: Got author information from package.json'"),");",t("br",{}),"        ",t("span",{className:"hljs-keyword"},void 0,"return")," author;",t("br",{}),"      }",t("br",{}),"    });",t("br",{}),t("br",{}),"    auto.hooks.getPreviousVersion.tapPromise(",t("span",{className:"hljs-string"},void 0,"'NPM'"),", ",t("span",{className:"hljs-keyword"},void 0,"async")," () => {",t("br",{}),"      ",t("span",{className:"hljs-keyword"},void 0,"const")," { version } = ",t("span",{className:"hljs-built_in"},void 0,"JSON"),".parse(",t("span",{className:"hljs-keyword"},void 0,"await")," readFile(",t("span",{className:"hljs-string"},void 0,"'package.json'"),", ",t("span",{className:"hljs-string"},void 0,"'utf-8'"),"));",t("br",{}),t("br",{}),"      auto.logger.log.info(",t("br",{}),"        ",t("span",{className:"hljs-string"},void 0,"'NPM: Got previous version from package.json - '"),",",t("br",{}),"        version",t("br",{}),"      );",t("br",{}),t("br",{}),"      ",t("span",{className:"hljs-keyword"},void 0,"if")," (version) {",t("br",{}),"        ",t("span",{className:"hljs-keyword"},void 0,"return")," auto.prefixRelease(",t("br",{}),"          ",t("span",{className:"hljs-built_in"},void 0,"JSON"),".parse(",t("span",{className:"hljs-keyword"},void 0,"await")," readFile(",t("span",{className:"hljs-string"},void 0,"'package.json'"),", ",t("span",{className:"hljs-string"},void 0,"'utf-8'"),")).version",t("br",{}),"        );",t("br",{}),"      }",t("br",{}),"    });",t("br",{}),t("br",{}),"    auto.hooks.getRepository.tapPromise(",t("span",{className:"hljs-string"},void 0,"'NPM'"),", ",t("span",{className:"hljs-keyword"},void 0,"async")," () => {",t("br",{}),"      auto.logger.log.info(",t("span",{className:"hljs-string"},void 0,"'NPM: getting repo information from package.json'"),");",t("br",{}),"      ",t("span",{className:"hljs-keyword"},void 0,"return")," getConfigFromPackageJson();",t("br",{}),"    });",t("br",{}),t("br",{}),"    auto.hooks.publish.tapPromise(",t("span",{className:"hljs-string"},void 0,"'NPM'"),", ",t("span",{className:"hljs-keyword"},void 0,"async")," (version: SEMVER) => {",t("br",{}),"      ",t("span",{className:"hljs-keyword"},void 0,"await")," execPromise(",t("span",{className:"hljs-string"},void 0,"'npm'"),", [",t("br",{}),"        ",t("span",{className:"hljs-string"},void 0,"'version'"),",",t("br",{}),"        version,",t("br",{}),"        ",t("span",{className:"hljs-string"},void 0,"'-m'"),",",t("br",{}),"        ",t("span",{className:"hljs-string"},void 0,"'Bump version to: %s [skip ci]'"),t("br",{}),"      ]);",t("br",{}),"      ",t("span",{className:"hljs-keyword"},void 0,"await")," execPromise(",t("span",{className:"hljs-string"},void 0,"'npm'"),", [",t("span",{className:"hljs-string"},void 0,"'publish'"),"]);",t("br",{}),"      ",t("span",{className:"hljs-keyword"},void 0,"await")," execPromise(",t("span",{className:"hljs-string"},void 0,"'git'"),", [",t("br",{}),"        ",t("span",{className:"hljs-string"},void 0,"'push'"),",",t("br",{}),"        ",t("span",{className:"hljs-string"},void 0,"'--follow-tags'"),",",t("br",{}),"        ",t("span",{className:"hljs-string"},void 0,"'--set-upstream'"),",",t("br",{}),"        auto.remote,",t("br",{}),"        ",t("span",{className:"hljs-string"},void 0,"'$branch'"),t("br",{}),"      ]);",t("br",{}),"    });",t("br",{}),"  }",t("br",{}),"}",t("br",{})));var aa=e=>t("div",{className:e.className},void 0,t("section",{},void 0,p,g,v,t("ul",{},void 0,u,t("li",{},void 0,"a name for the plugin, should match the ",t(c,{currentPage:e.currentPage,to:"/auto/pages/plugins.html#plugin-declaration"},void 0,"name of the package")," (REQUIRED)"),b),N,f,j,t("h2",{id:"constructor"},void 0,"Constructor ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#constructor","aria-hidden":"true"})),k,y,t("h2",{id:"hooks"},void 0,"Hooks ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#hooks","aria-hidden":"true"})),w,P,t("h3",{id:"main-hooks"},void 0,"Main Hooks ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#main-hooks","aria-hidden":"true"})),t("h4",{id:"beforerun"},void 0,"beforeRun ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#beforerun","aria-hidden":"true"})),C,T,t("h4",{id:"modifyconfig"},void 0,"modifyConfig ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#modifyconfig","aria-hidden":"true"})),L,x,t("h4",{id:"validateconfig"},void 0,"validateConfig ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#validateconfig","aria-hidden":"true"})),t("p",{},void 0,"Validate how your plugin is configured. Make sure to account for the ",t(c,{currentPage:e.currentPage,to:"/auto/pages/plugins.html#plugin-declaration"},void 0,"different ways you plugin can be included")," in an ",R,"."),M,t("p",{},void 0,O," and it's plugins use ",t(c,{currentPage:e.currentPage,target:"_blank",to:"https://github.com/gcanti/io-ts",className:"external-link"},void 0,"io-ts")," to validate the options for a plugin. If you're using typescript this is a great way to define the options for your plugin."),S,I,E,t("h4",{id:"beforeshipit"},void 0,"beforeShipIt ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#beforeshipit","aria-hidden":"true"})),V,_,A,G,t("h4",{id:"beforecommitchangelog"},void 0,"beforeCommitChangelog ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#beforecommitchangelog","aria-hidden":"true"})),H,$,F,t("h4",{id:"afteraddtochangelog"},void 0,"afterAddToChangelog ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#afteraddtochangelog","aria-hidden":"true"})),D,J,Y,t("h4",{id:"afterrelease"},void 0,"afterRelease ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#afterrelease","aria-hidden":"true"})),z,B,U,t("h4",{id:"makerelease"},void 0,"makeRelease ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#makerelease","aria-hidden":"true"})),q,K,W,t("h4",{id:"aftershipit"},void 0,"afterShipIt ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#aftershipit","aria-hidden":"true"})),Q,X,Z,t("h4",{id:"getauthor"},void 0,"getAuthor ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#getauthor","aria-hidden":"true"})),ee,ae,t("h4",{id:"getpreviousversion"},void 0,"getPreviousVersion ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#getpreviousversion","aria-hidden":"true"})),se,oe,t("h4",{id:"getrepository"},void 0,"getRepository ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#getrepository","aria-hidden":"true"})),re,ie,t("h4",{id:"oncreaterelease"},void 0,"onCreateRelease ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#oncreaterelease","aria-hidden":"true"})),ne,te,t("ul",{},void 0,t("li",{},void 0,"onCreateLogParse (detailed ",t(c,{currentPage:e.currentPage,to:""},void 0,"below"),")"),t("li",{},void 0,"onCreateChangelog (detailed ",t(c,{currentPage:e.currentPage,to:""},void 0,"below"),")")),le,t("h4",{id:"oncreatechangelog"},void 0,"onCreateChangelog ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#oncreatechangelog","aria-hidden":"true"})),t("p",{},void 0,"This is where you hook into the changelog's hooks. See usage ",t(c,{currentPage:e.currentPage,to:"#changelog-hooks"},void 0,"below"),". This hook is exposed for convenience on during ",de," and at the root ",he),t("h4",{id:"oncreatelogparse"},void 0,"onCreateLogParse ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#oncreatelogparse","aria-hidden":"true"})),t("p",{},void 0,"This is where you hook into the LogParse's hooks. See usage ",t(c,{currentPage:e.currentPage,to:"#logparse-hooks"},void 0,"below"),". This hook is exposed for convenience on during ",ce," and at the root ",me),t("h4",{id:"version"},void 0,"version ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#version","aria-hidden":"true"})),pe,ge,t("h4",{id:"afterversion"},void 0,"afterVersion ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#afterversion","aria-hidden":"true"})),ve,t("h4",{id:"publish"},void 0,"publish ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#publish","aria-hidden":"true"})),ue,be,t("h4",{id:"afterpublish"},void 0,"afterPublish ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#afterpublish","aria-hidden":"true"})),Ne,fe,t("h4",{id:"canary"},void 0,"canary ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#canary","aria-hidden":"true"})),je,ke,ye,we,t("h3",{id:"changelog-hooks"},void 0,"Changelog Hooks ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#changelog-hooks","aria-hidden":"true"})),t("h4",{id:"addtobody"},void 0,"addToBody ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#addtobody","aria-hidden":"true"})),Pe,t("p",{},void 0,"The following adds a random GIF from ",t(c,{currentPage:e.currentPage,target:"_blank",to:"https://giphy.com",className:"external-link"},void 0,"giphy")," to each new changelog."),Ce,t("h4",{id:"renderchangelogline"},void 0,"renderChangelogLine ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#renderchangelogline","aria-hidden":"true"})),Te,Le,xe,t("h4",{id:"renderchangelogtitle"},void 0,"renderChangelogTitle ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#renderchangelogtitle","aria-hidden":"true"})),Re,Me,t("h4",{id:"renderchangelogauthor"},void 0,"renderChangelogAuthor ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#renderchangelogauthor","aria-hidden":"true"})),Oe,Se,t("h4",{id:"renderchangelogauthorline"},void 0,"renderChangelogAuthorLine ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#renderchangelogauthorline","aria-hidden":"true"})),Ie,Ee,t("h4",{id:"createchangelogtitle"},void 0,"createChangelogTitle ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#createchangelogtitle","aria-hidden":"true"})),Ve,_e,Ae,t("h4",{id:"omitreleasenotes"},void 0,"omitReleaseNotes ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#omitreleasenotes","aria-hidden":"true"})),Ge,He,$e,t("h3",{id:"logparse-hooks"},void 0,"LogParse Hooks ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#logparse-hooks","aria-hidden":"true"})),t("h4",{id:"parsecommit"},void 0,"parseCommit ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#parsecommit","aria-hidden":"true"})),Fe,De,t("h4",{id:"omitcommit"},void 0,"omitCommit ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#omitcommit","aria-hidden":"true"})),Je,Ye,t("h3",{id:"init-hooks"},void 0,"Init Hooks ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#init-hooks","aria-hidden":"true"})),t("h4",{id:"writercfile"},void 0,"writeRcFile ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#writercfile","aria-hidden":"true"})),ze,Be,t("h4",{id:"getrepo"},void 0,"getRepo ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#getrepo","aria-hidden":"true"})),Ue,t("h4",{id:"getauthor---init"},void 0,"getAuthor - init ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#getauthor---init","aria-hidden":"true"})),qe,t("h4",{id:"configureplugin"},void 0,"configurePlugin ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#configureplugin","aria-hidden":"true"})),Ke,We,t("h4",{id:"createenv"},void 0,"createEnv ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#createenv","aria-hidden":"true"})),Qe,Xe,t("h2",{id:"example-plugin---npm-(simple)"},void 0,"Example Plugin - NPM (simple) ",t(c,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#example-plugin---npm-(simple)","aria-hidden":"true"})),Ze,ea));a.default=aa,e.exports=a.default}}]);
//# sourceMappingURL=writing-plugins.js.map