(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{58:function(e,a,s){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var i,o=n(s(3)),t=function(e){if(e&&e.__esModule)return e;var a={};if(null!=e)for(var s in e)if(Object.prototype.hasOwnProperty.call(e,s)){var i=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,s):{};i.get||i.set?Object.defineProperty(a,s,i):a[s]=e[s]}return a.default=e,a}(s(0));n(s(2)),n(s(114));function n(e){return e&&e.__esModule?e:{default:e}}function r(e,a,s,o){i||(i="function"==typeof Symbol&&Symbol.for&&Symbol.for("react.element")||60103);var t=e&&e.defaultProps,n=arguments.length-3;if(a||0===n||(a={children:void 0}),a&&t)for(var r in t)void 0===a[r]&&(a[r]=t[r]);else a||(a=t||{});if(1===n)a.children=o;else if(n>1){for(var l=new Array(n),d=0;d<n;d++)l[d]=arguments[d+3];a.children=l}return{$$typeof:i,type:e,key:void 0===s?null:""+s,ref:null,props:a,_owner:null}}function l(e,a,s){return a in e?Object.defineProperty(e,a,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[a]=s,e}function d(){return(d=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var s=arguments[a];for(var i in s)Object.prototype.hasOwnProperty.call(s,i)&&(e[i]=s[i])}return e}).apply(this,arguments)}function c(e,a){if(null==e)return{};var s,i,o=function(e,a){if(null==e)return{};var s,i,o={},t=Object.keys(e);for(i=0;i<t.length;i++)s=t[i],a.indexOf(s)>=0||(o[s]=e[s]);return o}(e,a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(i=0;i<t.length;i++)s=t[i],a.indexOf(s)>=0||Object.prototype.propertyIsEnumerable.call(e,s)&&(o[s]=e[s])}return o}const h=e=>{let{to:a}=e,s=c(e,["to"]);return a.includes("http")?t.default.createElement("a",d({},e,{href:a})):("#"===a[0]&&(a=o.default.join("/auto/","pages/autorc.html")+a),t.default.createElement("a",d({},s,{href:a,onClick:s=>{if(s.preventDefault(),"#"===e.to)return!1;const i=new URL(o.default.join(window.location.origin,a));window.history.pushState((e=>({href:e.href,pathname:e.pathname,hash:e.hash,query:e.query}))(i),null,a),e.onClick();const t=new CustomEvent("changeLocation",{detail:i});return dispatchEvent(t),!1}})))};h.defaultProps={href:"",onClick:()=>{}};class p extends t.Component{constructor(...e){super(...e),l(this,"state",{open:this.props.open})}render(){return r("details",{open:this.state.open},void 0,this.props.children)}}const g=e=>{var a,s;return s=a=class extends t.default.Component{constructor(...e){super(...e),l(this,"state",{Comp:null})}componentDidMount(){!this.state.Comp&&this.props.shouldLoad&&e().then(e=>{this.setState({Comp:e.default})})}render(){const{Comp:e}=this.state;return e?t.default.createElement(e,this.props,this.props.children||null):null}},l(a,"defaultProps",{shouldLoad:!0}),s};g(()=>s.e(27).then(s.bind(null,115))),g(()=>s.e(27).then(s.bind(null,116)));var v=r("h1",{},void 0,r("code",{},void 0,"auto")," RC File"),m=r("code",{},void 0,"auto"),u=r("code",{},void 0,"cosmiconfig"),b=r("ul",{},void 0,r("li",{},void 0,'a JSON or YAML, extension-less "rc file"'),r("li",{},void 0,'an "rc file" with the extensions ',r("code",{},void 0,".json"),", ",r("code",{},void 0,".yaml"),", or ",r("code",{},void 0,".yml")),r("li",{},void 0,"a package.json property")),f=r("p",{},void 0,r("code",{},void 0,"auto")," does not support writing configuration files in JavaScript."),j=r("p",{},void 0,"To interactively create an ",r("code",{},void 0,".autorc")," use the ",r("code",{},void 0,"init")," command. You can configure most flags and all labels/changelogTitles."),N=r("pre",{},void 0,r("code",{className:"language-sh"},void 0,"auto init",r("br",{}))),y=r("p",{},void 0,"The following are all of the top level configuration options for ",r("code",{},void 0,"auto"),". While some of the following options also exist as flags to certain comments, it is recommended to set them in an ",r("code",{},void 0,".autorc")," so your commands are terser and experience consistent."),P=r("p",{},void 0,"Configure the default release behavior."),w=r("pre",{},void 0,r("code",{className:"language-js"},void 0,"{",r("br",{}),"  ",r("span",{className:"hljs-string"},void 0,'"onlyPublishWithReleaseLabel"'),": ",r("span",{className:"hljs-literal"},void 0,"true"),r("br",{}),"}",r("br",{}))),T=r("p",{},void 0,'Configure what your repo considers the "master" branch.'),k=r("pre",{},void 0,r("code",{className:"language-js"},void 0,"{",r("br",{}),"  ",r("span",{className:"hljs-string"},void 0,'"baseBranch"'),": ",r("span",{className:"hljs-string"},void 0,'"trunk"'),r("br",{}),"}",r("br",{}))),x=r("p",{},void 0,"It is useful to specify your plugins in the rc file rather than in all the commands."),L=r("pre",{},void 0,r("code",{className:"language-js"},void 0,"{",r("br",{}),"  ",r("span",{className:"hljs-string"},void 0,'"plugins"'),": [",r("span",{className:"hljs-string"},void 0,'"npm"'),", ",r("span",{className:"hljs-string"},void 0,'"../path/to/plugin.js"'),", ",r("span",{className:"hljs-string"},void 0,'"NPM_PACKAGE_NAME"'),"]",r("br",{}),"}",r("br",{}))),O=r("p",{},void 0,"If you are using enterprise github, ",r("code",{},void 0,"auto")," lets you configure the github API URL that it uses."),C=r("pre",{},void 0,r("code",{className:"language-js"},void 0,"{",r("br",{}),"  ",r("span",{className:"hljs-string"},void 0,'"githubApi"'),": ",r("span",{className:"hljs-string"},void 0,'"https://github.mine.com/api/v3"'),r("br",{}),"}",r("br",{}))),A=r("p",{},void 0,"This is used for doing some searches in ",r("code",{},void 0,"auto"),"."),I=r("p",{},void 0,"If you are using enterprise github and your company hosts the graphql at some other URL than the ",r("code",{},void 0,"githubApi"),", you can use ",r("code",{},void 0,"githubGraphqlApi")," to set the base path for ",r("code",{},void 0,"auto"),". The ",r("code",{},void 0,"githubGraphqlApi")," get merged with ",r("code",{},void 0,"/graphql")," to build the final URL."),R=r("pre",{},void 0,r("code",{className:"language-js"},void 0,"{",r("br",{}),"  ",r("span",{className:"hljs-string"},void 0,'"githubGraphqlApi"'),": ",r("span",{className:"hljs-string"},void 0,'"https://github.mine.com/api/"'),r("br",{}),"}",r("br",{}))),E=r("p",{},void 0,"Name to use with git."),S=r("pre",{},void 0,r("code",{className:"language-js"},void 0,"{",r("br",{}),"  ",r("span",{className:"hljs-string"},void 0,'"name"'),": ",r("span",{className:"hljs-string"},void 0,'"Joe Schmo"'),r("br",{}),"}",r("br",{}))),_=r("p",{},void 0,"Email to use with git."),B=r("pre",{},void 0,r("code",{className:"language-js"},void 0,"{",r("br",{}),"  ",r("span",{className:"hljs-string"},void 0,'"email"'),": ",r("span",{className:"hljs-string"},void 0,'"joe@schmo.com"'),r("br",{}),"}",r("br",{}))),z=r("p",{},void 0,"For some commands you can supply defaults for some options."),M=r("p",{},void 0,r("strong",{},void 0,"Example:")," Adding the following to you ",r("code",{},void 0,".autorc")," will make ",r("code",{},void 0,"auto")," only release pre-releases to GitHub."),D=r("pre",{},void 0,r("code",{className:"language-json"},void 0,"{",r("br",{}),"  ",r("span",{className:"hljs-attr"},void 0,'"release"'),": {",r("br",{}),"    ",r("span",{className:"hljs-attr"},void 0,'"prerelease"'),": ",r("span",{className:"hljs-literal"},void 0,"true"),r("br",{}),"  }",r("br",{}),"}",r("br",{}))),U=r("p",{},void 0,"Please refer to each command's documentation to see which options are configurable."),q=r("hr",{}),Y=r("p",{},void 0,"The following options can be set exclusively in the ",r("code",{},void 0,".autorc")," and do not exist as CLI flags."),J=r("p",{},void 0,"Create and manage old major releases."),G=r("pre",{},void 0,r("code",{className:"language-js"},void 0,"{",r("br",{}),"  ",r("span",{className:"hljs-string"},void 0,'"versionBranches"'),": ",r("span",{className:"hljs-literal"},void 0,"true"),",",r("br",{}),"  ",r("span",{className:"hljs-comment"},void 0,"// or customize the branch prefix"),r("br",{}),"  ",r("span",{className:"hljs-string"},void 0,'"versionBranches"'),": ",r("span",{className:"hljs-string"},void 0,'"major-"'),r("br",{}),"}",r("br",{}))),V=r("p",{},void 0,"You can configure what branches ",r("code",{},void 0,"auto")," treats as prerelease branches. By default only ",r("code",{},void 0,"next")," is treated as a prerelease branch. If you configure ",r("code",{},void 0,"prereleaseBranches")," it will override the default."),W=r("pre",{},void 0,r("code",{className:"language-js"},void 0,"{",r("br",{}),"  ",r("span",{className:"hljs-string"},void 0,'"prereleaseBranches"'),": [",r("span",{className:"hljs-string"},void 0,'"next"'),", ",r("span",{className:"hljs-string"},void 0,'"beta"'),"]",r("br",{}),"}",r("br",{}))),F=r("p",{},void 0,"To customize your project's labels use the ",r("code",{},void 0,"labels")," section in your ",r("code",{},void 0,".autorc"),"."),$=r("pre",{},void 0,r("code",{className:"language-js"},void 0,"{",r("br",{}),"  ",r("span",{className:"hljs-string"},void 0,'"labels"'),": [",r("br",{}),"    { ",r("span",{className:"hljs-string"},void 0,'"releaseType"'),": ",r("span",{className:"hljs-string"},void 0,'"major"'),", ",r("span",{className:"hljs-string"},void 0,'"name"'),": ",r("span",{className:"hljs-string"},void 0,'"Version: Major"')," },",r("br",{}),"    { ",r("span",{className:"hljs-string"},void 0,'"releaseType"'),": ",r("span",{className:"hljs-string"},void 0,'"minor"'),", ",r("span",{className:"hljs-string"},void 0,'"name"'),": ",r("span",{className:"hljs-string"},void 0,'"Version: Minor"')," },",r("br",{}),"    { ",r("span",{className:"hljs-string"},void 0,'"releaseType"'),": ",r("span",{className:"hljs-string"},void 0,'"patch"'),", ",r("span",{className:"hljs-string"},void 0,'"name"'),": ",r("span",{className:"hljs-string"},void 0,'"Version: Patch"')," },",r("br",{}),"    { ",r("span",{className:"hljs-string"},void 0,'"releaseType"'),": ",r("span",{className:"hljs-string"},void 0,'"skip"'),", ",r("span",{className:"hljs-string"},void 0,'"name"'),": ",r("span",{className:"hljs-string"},void 0,'"NO!"')," },",r("br",{}),"    { ",r("span",{className:"hljs-string"},void 0,'"releaseType"'),": ",r("span",{className:"hljs-string"},void 0,'"release"'),", ",r("span",{className:"hljs-string"},void 0,'"name"'),": ",r("span",{className:"hljs-string"},void 0,'"Autobots, rollout!"')," }",r("br",{}),"  ]",r("br",{}),"}",r("br",{}))),H=r(p,{},void 0,r("summary",{},void 0,"Click here to see the default label configuration"),r("pre",{},void 0,r("code",{className:"language-js"},void 0,"[",r("br",{}),"  {",r("br",{}),"    ",r("span",{className:"hljs-attr"},void 0,"name"),": ",r("span",{className:"hljs-string"},void 0,"'major'"),",",r("br",{}),"    ",r("span",{className:"hljs-attr"},void 0,"changelogTitle"),": ",r("span",{className:"hljs-string"},void 0,"'💥 Breaking Change'"),",",r("br",{}),"    ",r("span",{className:"hljs-attr"},void 0,"description"),": ",r("span",{className:"hljs-string"},void 0,"'Increment the major version when merged'"),",",r("br",{}),"    ",r("span",{className:"hljs-attr"},void 0,"releaseType"),": ",r("span",{className:"hljs-string"},void 0,"'major'"),r("br",{}),"  },",r("br",{}),"  {",r("br",{}),"    ",r("span",{className:"hljs-attr"},void 0,"name"),": ",r("span",{className:"hljs-string"},void 0,"'minor'"),",",r("br",{}),"    ",r("span",{className:"hljs-attr"},void 0,"changelogTitle"),": ",r("span",{className:"hljs-string"},void 0,"'🚀 Enhancement'"),",",r("br",{}),"    ",r("span",{className:"hljs-attr"},void 0,"description"),": ",r("span",{className:"hljs-string"},void 0,"'Increment the minor version when merged'"),",",r("br",{}),"    ",r("span",{className:"hljs-attr"},void 0,"releaseType"),": ",r("span",{className:"hljs-string"},void 0,"'minor'"),r("br",{}),"  },",r("br",{}),"  {",r("br",{}),"    ",r("span",{className:"hljs-attr"},void 0,"name"),": ",r("span",{className:"hljs-string"},void 0,"'patch'"),",",r("br",{}),"    ",r("span",{className:"hljs-attr"},void 0,"changelogTitle"),": ",r("span",{className:"hljs-string"},void 0,"'🐛 Bug Fix'"),",",r("br",{}),"    ",r("span",{className:"hljs-attr"},void 0,"description"),": ",r("span",{className:"hljs-string"},void 0,"'Increment the patch version when merged'"),",",r("br",{}),"    ",r("span",{className:"hljs-attr"},void 0,"releaseType"),": ",r("span",{className:"hljs-string"},void 0,"'patch'"),r("br",{}),"  },",r("br",{}),"  {",r("br",{}),"    ",r("span",{className:"hljs-attr"},void 0,"name"),": ",r("span",{className:"hljs-string"},void 0,"'skip-release'"),",",r("br",{}),"    ",r("span",{className:"hljs-attr"},void 0,"description"),": ",r("span",{className:"hljs-string"},void 0,"'Preserve the current version when merged'"),",",r("br",{}),"    ",r("span",{className:"hljs-attr"},void 0,"releaseType"),": ",r("span",{className:"hljs-string"},void 0,"'skip'"),r("br",{}),"  },",r("br",{}),"  {",r("br",{}),"    ",r("span",{className:"hljs-attr"},void 0,"name"),": ",r("span",{className:"hljs-string"},void 0,"'release'"),",",r("br",{}),"    ",r("span",{className:"hljs-attr"},void 0,"description"),": ",r("span",{className:"hljs-string"},void 0,"'Create a release when this pr is merged'"),",",r("br",{}),"    ",r("span",{className:"hljs-attr"},void 0,"releaseType"),": ",r("span",{className:"hljs-string"},void 0,"'release'"),r("br",{}),"  },",r("br",{}),"  {",r("br",{}),"    ",r("span",{className:"hljs-attr"},void 0,"name"),": ",r("span",{className:"hljs-string"},void 0,"'internal'"),",",r("br",{}),"    ",r("span",{className:"hljs-attr"},void 0,"changelogTitle"),": ",r("span",{className:"hljs-string"},void 0,"'🏠 Internal'"),",",r("br",{}),"    ",r("span",{className:"hljs-attr"},void 0,"description"),": ",r("span",{className:"hljs-string"},void 0,"'Changes only affect the internal API'"),",",r("br",{}),"    ",r("span",{className:"hljs-attr"},void 0,"releaseType"),": ",r("span",{className:"hljs-string"},void 0,"'none'"),r("br",{}),"  },",r("br",{}),"  {",r("br",{}),"    ",r("span",{className:"hljs-attr"},void 0,"name"),": ",r("span",{className:"hljs-string"},void 0,"'documentation'"),",",r("br",{}),"    ",r("span",{className:"hljs-attr"},void 0,"changelogTitle"),": ",r("span",{className:"hljs-string"},void 0,"'📝 Documentation'"),",",r("br",{}),"    ",r("span",{className:"hljs-attr"},void 0,"description"),": ",r("span",{className:"hljs-string"},void 0,"'Changes only affect the documentation'"),",",r("br",{}),"    ",r("span",{className:"hljs-attr"},void 0,"releaseType"),": ",r("span",{className:"hljs-string"},void 0,"'none'"),r("br",{}),"  }",r("br",{}),"];",r("br",{})))),K=r("p",{},void 0,"You can customize everything about a label"),Q=r("li",{},void 0,r("code",{},void 0,"name")," - The label text used for the label. If omitted defaults to the ",r("code",{},void 0,"key")," value"),X=r("li",{},void 0,r("code",{},void 0,"releaseType")," - The type of release to trigger (major, minor, patch, skip, release, or none)"),Z=r("li",{},void 0,r("code",{},void 0,"overwrite")," - Overwrite the default label(s) associated with the ",r("code",{},void 0,"releaseType"),". (default: ",r("code",{},void 0,"false"),")"),ee=r("li",{},void 0,r("code",{},void 0,"changelogTitle")," - The title to use in the changelog"),ae=r("li",{},void 0,r("code",{},void 0,"description")," - The description to use when creating the label"),se=r("code",{},void 0,"color"),ie=r("pre",{},void 0,r("code",{className:"language-js"},void 0,"{",r("br",{}),"  ",r("span",{className:"hljs-string"},void 0,'"labels"'),": [",r("br",{}),"    {",r("br",{}),"      ",r("span",{className:"hljs-string"},void 0,'"name"'),": ",r("span",{className:"hljs-string"},void 0,'"Version: Major"'),",",r("br",{}),"      ",r("span",{className:"hljs-string"},void 0,'"changelogTitle"'),": ",r("span",{className:"hljs-string"},void 0,'"The API has changed:"'),",",r("br",{}),"      ",r("span",{className:"hljs-string"},void 0,'"description"'),": ",r("span",{className:"hljs-string"},void 0,'"Add this label to a PR to create a major release"'),",",r("br",{}),"      ",r("span",{className:"hljs-string"},void 0,'"color"'),": ",r("span",{className:"hljs-string"},void 0,'"blue"'),",",r("br",{}),"      ",r("span",{className:"hljs-string"},void 0,'"releaseType"'),": ",r("span",{className:"hljs-string"},void 0,'"major"'),r("br",{}),"    }",r("br",{}),"  ]",r("br",{}),"}",r("br",{}))),oe=r("code",{},void 0,"none"),te=r("p",{},void 0,"A label with the ",r("code",{},void 0,"none")," release type will not create a release when merged. If paired with a SEMVER label, the release is not skipped."),ne=r("pre",{},void 0,r("code",{className:"language-js"},void 0,"{",r("br",{}),"  ",r("span",{className:"hljs-string"},void 0,'"labels"'),": [",r("br",{}),"    {",r("br",{}),"      ",r("span",{className:"hljs-string"},void 0,'"name"'),": ",r("span",{className:"hljs-string"},void 0,'"documentation"'),",",r("br",{}),"      ",r("span",{className:"hljs-string"},void 0,'"releaseType"'),": ",r("span",{className:"hljs-string"},void 0,'"none"'),r("br",{}),"    }",r("br",{}),"  ]",r("br",{}),"}",r("br",{}))),re=r("p",{},void 0,"Each PR included in the release will be assigned to a label section based upon the matching label with the highest ",r("code",{},void 0,"releaseType")," that has a ",r("code",{},void 0,"changelogTitle"),"."),le=r("ul",{},void 0,r("li",{},void 0,"Priority order of ",r("code",{},void 0,"releaseType")," from highest to lowest is: major, minor, patch, and then all others"),r("li",{},void 0,"If a PR has multiple labels of the same ",r("code",{},void 0,"releaseType"),", then the PR is assigned based upon the label that is assigned first in the config")),de=r("p",{},void 0,"By default auto will create sections in the changelog for the following labels:"),ce=r("ul",{},void 0,r("li",{},void 0,r("code",{},void 0,"major")),r("li",{},void 0,r("code",{},void 0,"minor")),r("li",{},void 0,r("code",{},void 0,"patch")),r("li",{},void 0,r("code",{},void 0,"internal")),r("li",{},void 0,r("code",{},void 0,"documentation"))),he=r("p",{},void 0,"For example:"),pe=r("ul",{},void 0,r("li",{},void 0,"Using the default config, if a given PR has the labels ",r("code",{},void 0,"minor")," and ",r("code",{},void 0,"internal"),", then it will be included in the ",r("code",{},void 0,"minor")," label section"),r("li",{},void 0,"Using the default config, if a given PR has the labels ",r("code",{},void 0,"documentation")," and ",r("code",{},void 0,"internal"),", then it will be included in the ",r("code",{},void 0,"internal")," label section")),ge=r("p",{},void 0,"To customize the title for the section in the changelog you can"),ve=r("pre",{},void 0,r("code",{className:"language-js"},void 0,"{",r("br",{}),"  ",r("span",{className:"hljs-string"},void 0,'"labels"'),": [",r("br",{}),"    {",r("br",{}),"      ",r("span",{className:"hljs-string"},void 0,'"name"'),": ",r("span",{className:"hljs-string"},void 0,'"documentation"'),",",r("br",{}),"      ",r("span",{className:"hljs-string"},void 0,'"changelogTitle"'),": ",r("span",{className:"hljs-string"},void 0,'"Docz"'),r("br",{}),"    }",r("br",{}),"  ]",r("br",{}),"}",r("br",{}))),me=r("p",{},void 0,"If you want more sections in your changelog to further detail the change-set you can use the ",r("code",{},void 0,"labels")," section to add more. Any label in the label section with a changelogTitle will become a special section in your changelog."),ue=r("p",{},void 0,"The following adds a ",r("code",{},void 0,"typescript")," label to the project that we can use to denote changes related to a TypeScript re-write."),be=r("pre",{},void 0,r("code",{className:"language-js"},void 0,"{",r("br",{}),"  ",r("span",{className:"hljs-string"},void 0,'"labels"'),": [",r("br",{}),"    {",r("br",{}),"      ",r("span",{className:"hljs-string"},void 0,'"name"'),": ",r("span",{className:"hljs-string"},void 0,'"typescript"'),",",r("br",{}),"      ",r("span",{className:"hljs-string"},void 0,'"changelogTitle"'),": ",r("span",{className:"hljs-string"},void 0,'"TypeScript Rewrite"'),r("br",{}),"    }",r("br",{}),"  ]",r("br",{}),"}",r("br",{}))),fe=r("p",{},void 0,"You can remove the existing default label sections by adding a custom overwrite label with the same ",r("code",{},void 0,"releaseType"),"."),je=r("p",{},void 0,"The following removes the default internal and documentation label sections:"),Ne=r("pre",{},void 0,r("code",{className:"language-js"},void 0,"{",r("br",{}),"  ",r("span",{className:"hljs-string"},void 0,'"labels"'),": [",r("br",{}),"    {",r("br",{}),"      ",r("span",{className:"hljs-string"},void 0,'"name"'),": ",r("span",{className:"hljs-string"},void 0,'"Custom Doc Label"'),",",r("br",{}),"      ",r("span",{className:"hljs-string"},void 0,'"changelogTitle"'),": ",r("span",{className:"hljs-string"},void 0,'"Docz"'),",",r("br",{}),"      ",r("span",{className:"hljs-string"},void 0,'"releaseType"'),": ",r("span",{className:"hljs-string"},void 0,'"none"'),",",r("br",{}),"      ",r("span",{className:"hljs-string"},void 0,'"overwrite"'),": ",r("span",{className:"hljs-literal"},void 0,"true"),r("br",{}),"    }",r("br",{}),"  ]",r("br",{}),"}",r("br",{}))),ye=r("p",{},void 0,"If you want to share your auto configuration between projects you can use the ",r("code",{},void 0,"extends")," property. This property will load from a module's package.json or from a custom path. It's expected that the extended configuration be under the ",r("code",{},void 0,"auto")," key in the package.json file."),Pe=r("p",{},void 0,"Auto can load ",r("code",{},void 0,"extends")," configs in the following ways:"),we=r("ul",{},void 0,r("li",{},void 0,"from a path ",r("code",{},void 0,"./path/to/config")," (this file must be in JSON format)"),r("li",{},void 0,"from a scoped package ",r("code",{},void 0,"@YOUR_SCOPE/auto-config")," (under the ",r("code",{},void 0,"auto")," key in the package.json)"),r("li",{},void 0,"from a package ",r("code",{},void 0,"auto-config-YOUR_NAME")),r("li",{},void 0,"from a url ",r("code",{},void 0,"https://yourdomain.com/auto-config.json")," (must return the content type ",r("code",{},void 0,"application/json"),")")),Te=r("pre",{},void 0,r("code",{className:"language-js"},void 0,"{",r("br",{}),"  ",r("span",{className:"hljs-string"},void 0,'"extends"'),": ",r("span",{className:"hljs-string"},void 0,'"@YOUR_SCOPE"'),r("br",{}),"}",r("br",{}))),ke=r("p",{},void 0,"Will use the package ",r("code",{},void 0,"@YOUR_SCOPE/auto-config")),xe=r("pre",{},void 0,r("code",{className:"language-js"},void 0,"{",r("br",{}),"  ",r("span",{className:"hljs-string"},void 0,'"extends"'),": ",r("span",{className:"hljs-string"},void 0,'"joe"'),r("br",{}),"}",r("br",{}))),Le=r("p",{},void 0,"Will use the package ",r("code",{},void 0,"auto-config-joe")),Oe=r("article",{className:"message column is-warning"},void 0,r("div",{className:"message-body"},void 0,r("p",{},void 0,"If extending from a config package make sure it's a dependency of your project"))),Ce=r("p",{},void 0,"If you're extending from a local file it can be any file in JSON format or a ",r("code",{},void 0,"package.json")," file."),Ae=r("pre",{},void 0,r("code",{className:"language-js"},void 0,"{",r("br",{}),"  ",r("span",{className:"hljs-string"},void 0,'"extends"'),": ",r("span",{className:"hljs-string"},void 0,'"./path/to/config.json"'),r("br",{}),"}",r("br",{}))),Ie=r("pre",{},void 0,r("code",{className:"language-js"},void 0,"{",r("br",{}),"  ",r("span",{className:"hljs-string"},void 0,'"extends"'),": ",r("span",{className:"hljs-string"},void 0,'"./path/to/other/package.json"'),r("br",{}),"}",r("br",{})));var Re=e=>r("div",{className:e.className},void 0,r("section",{},void 0,v,r("p",{},void 0,m," uses ",r(h,{currentPage:e.currentPage,target:"_blank",to:"https://github.com/davidtheclark/cosmiconfig",className:"external-link"},void 0,"cosmiconfig")," to find your config. This means you can define this file a variety of ways. Our ",u," setup is custom and will start at the root of your project and start to search up the directory tree for the following:"),b,f,r("h2",{id:"initialization"},void 0,"Initialization ",r(h,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#initialization","aria-hidden":"true"})),j,N,r("h2",{id:"options"},void 0,"Options ",r(h,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#options","aria-hidden":"true"})),y,r("h3",{id:"only-publish-with-release-label"},void 0,"Only Publish With Release Label ",r(h,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#only-publish-with-release-label","aria-hidden":"true"})),P,w,r("h3",{id:"base-branch"},void 0,"Base Branch ",r(h,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#base-branch","aria-hidden":"true"})),T,k,r("h3",{id:"plugins"},void 0,"Plugins ",r(h,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#plugins","aria-hidden":"true"})),x,L,r("h3",{id:"githubapi"},void 0,"githubApi ",r(h,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#githubapi","aria-hidden":"true"})),O,C,r("h3",{id:"githubgraphqlapi"},void 0,"githubGraphqlApi ",r(h,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#githubgraphqlapi","aria-hidden":"true"})),A,I,R,r("h3",{id:"name"},void 0,"name ",r(h,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#name","aria-hidden":"true"})),E,S,r("h3",{id:"email"},void 0,"email ",r(h,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#email","aria-hidden":"true"})),_,B,r("h3",{id:"command-defaults"},void 0,"Command Defaults ",r(h,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#command-defaults","aria-hidden":"true"})),z,M,D,U,q,r("h3",{id:"exclusive-options"},void 0,"Exclusive Options ",r(h,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#exclusive-options","aria-hidden":"true"})),Y,r("h3",{id:"versionbranches"},void 0,"versionBranches ",r(h,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#versionbranches","aria-hidden":"true"})),J,G,r("h3",{id:"prerelease-branches"},void 0,"Prerelease Branches ",r(h,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#prerelease-branches","aria-hidden":"true"})),V,W,r("h3",{id:"labels"},void 0,"Labels ",r(h,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#labels","aria-hidden":"true"})),F,$,H,r("h4",{id:"label-customization"},void 0,"Label Customization ",r(h,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#label-customization","aria-hidden":"true"})),K,r("ul",{},void 0,Q,X,Z,ee,ae,r("li",{},void 0,se," - The color of the label. Can be specified as a string in any of ",r(h,{currentPage:e.currentPage,target:"_blank",to:"https://github.com/bgrins/TinyColor#accepted-string-input",className:"external-link"},void 0,"these")," ways. If not specified the color is random")),ie,r("h4",{id:"release-type%3A-none"},void 0,"Release Type: ",oe," ",r(h,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#release-type%3A-none","aria-hidden":"true"})),te,ne,r("h4",{id:"changelog-titles"},void 0,"Changelog Titles ",r(h,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#changelog-titles","aria-hidden":"true"})),re,le,de,ce,he,pe,r("h5",{id:"updating-default-label-changelog-titles"},void 0,"Updating Default Label Changelog Titles ",r(h,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#updating-default-label-changelog-titles","aria-hidden":"true"})),ge,ve,r("h5",{id:"adding-additional-changelog-title-sections"},void 0,"Adding Additional Changelog Title Sections ",r(h,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#adding-additional-changelog-title-sections","aria-hidden":"true"})),me,ue,be,r("h4",{id:"removing-default-label-changelog-title-sections"},void 0,"Removing Default Label Changelog Title Sections ",r(h,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#removing-default-label-changelog-title-sections","aria-hidden":"true"})),fe,je,Ne,r("h2",{id:"extending"},void 0,"Extending ",r(h,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#extending","aria-hidden":"true"})),ye,Pe,we,Te,ke,xe,Le,Oe,Ce,Ae,Ie));a.default=Re,e.exports=a.default}}]);
//# sourceMappingURL=autorc.js.map