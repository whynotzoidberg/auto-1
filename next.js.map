{"version":3,"sources":["webpack:///./docs/pages/extras/next.md","webpack:///./docs/pages/generated/next.md"],"names":["_path","_interopRequireDefault","__webpack_require__","_react","_interopRequireWildcard","Link","props","to","rest","_objectWithoutProperties","includes","default","createElement","_extends","href","path","join","onClick","e","preventDefault","location","URL","window","origin","history","pushState","Location","pathname","hash","query","getLocation","popStateEvent","CustomEvent","detail","dispatchEvent","defaultProps","lazyComponent","provider","_class","_temp","React","Component","[object Object]","args","super","_defineProperty","this","Comp","componentDidMount","state","shouldLoad","then","c","setState","render","children","bind","_jsx","className","id","currentPage","aria-hidden","_ref3","target","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18"],"mappings":"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","file":"next.js","sourcesContent":["\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto/','pages/extras/next.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h3 id=\"setting-up-protected-branches\">Setting up Protected Branches <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#setting-up-protected-branches\" aria-hidden=\"true\"></Link></h3>\n<p>You should make your pre-release branches protected on GitHub. This will prevent a bunch of unwanted behavior from happening.</p>\n<ol>\n<li>Go to you project's setting on <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://github.com\" className=\"external-link\">GitHub</Link></li>\n<li>Click <code>Branches</code></li>\n<li>Click <code>Add Rule</code></li>\n<li>Enter the name of your prerelease branch (ex: <code>next</code>)</li>\n<li>Configure extra branch protection settings</li>\n<li>(Optional) Set the base branch in GitHub to your prerelease branch (this ensure new PRs go to this branch)</li>\n</ol>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    ","\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto/','pages/generated/next.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1><code>next</code></h1>\n<p>Make a release for your &quot;prerelease&quot; release line. This is ran automatically from &quot;shipit&quot;.</p>\n<ol>\n<li>Creates a prerelease on package management platform</li>\n<li>Creates a &quot;Pre Release&quot; on GitHub releases page.</li>\n</ol>\n<p>Calling the <code>next</code> command from a prerelease branch will publish a prerelease, otherwise it will publish to the default prerelease branch.</p>\n<h2 id=\"options\">Options <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#options\" aria-hidden=\"true\"></Link></h2>\n<table>\n<thead>\n<tr>\n<th>Flag</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>--dry-run</code>, <code>-d</code></td>\n<td>Boolean</td>\n<td>Report what command will do but do not actually do anything</td>\n</tr>\n<tr>\n<td><code>--message</code>, <code>-m</code></td>\n<td>String</td>\n<td>The message used when attaching the prerelease version to a PR</td>\n</tr>\n<tr>\n<td><code>--quiet</code>, <code>-q</code></td>\n<td>Boolean</td>\n<td>Print <strong>only</strong> the result of the command</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"examples\">Examples <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#examples\" aria-hidden=\"true\"></Link></h2>\n<pre><code className=\"language-sh\">auto next<br /></code></pre>\n<h2 id=\"configurable-options\">Configurable Options <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#configurable-options\" aria-hidden=\"true\"></Link></h2>\n<p>You can configure some of the options for the <code>next</code> command in the <code>.autorc</code>.</p>\n<ul>\n<li><code>message</code></li>\n</ul>\n<p><strong>Example <code>.autorc</code>:</strong></p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"next\"</span>: &#123;<br />    <span className=\"hljs-attr\">\"message\"</span>: <span className=\"hljs-string\">\"string\"</span><br />  &#125;<br />&#125;<br /></code></pre>\n<h3 id=\"setting-up-protected-branches\">Setting up Protected Branches <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#setting-up-protected-branches\" aria-hidden=\"true\"></Link></h3>\n<p>You should make your pre-release branches protected on GitHub. This will prevent a bunch of unwanted behavior from happening.</p>\n<ol>\n<li>Go to you project's setting on <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://github.com\" className=\"external-link\">GitHub</Link></li>\n<li>Click <code>Branches</code></li>\n<li>Click <code>Add Rule</code></li>\n<li>Enter the name of your prerelease branch (ex: <code>next</code>)</li>\n<li>Configure extra branch protection settings</li>\n<li>(Optional) Set the base branch in GitHub to your prerelease branch (this ensure new PRs go to this branch)</li>\n</ol>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    "],"sourceRoot":""}