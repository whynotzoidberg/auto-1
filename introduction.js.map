{"version":3,"sources":["webpack:///./docs/pages/introduction.md"],"names":["_path","_interopRequireDefault","__webpack_require__","_react","_interopRequireWildcard","_classnames","_reactIdealImage","Link","props","to","rest","_objectWithoutProperties","includes","default","createElement","_extends","href","path","join","onClick","e","preventDefault","location","URL","window","origin","history","pushState","Location","pathname","hash","query","getLocation","popStateEvent","CustomEvent","detail","dispatchEvent","defaultProps","imageSources","../images/auto.gif","then","t","bind","lazyComponent","provider","_class","_temp","React","Component","[object Object]","args","super","_defineProperty","this","Comp","componentDidMount","state","shouldLoad","c","setState","render","children","_jsx","image","ImageProvider","src","className","width","height","placeholder","lqip","preSrc","srcSet","images","map","i","_objectSpread","alt","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","currentPage","_ref11","_ref12","_ref13"],"mappings":"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","file":"introduction.js","sourcesContent":["\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto/','pages/introduction.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = { \n      '../images/auto.gif': () => import(\n        /* webpackChunkName: \"image-auto.gif\" */\n        '.././images/auto.gif'\n      )\n     };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <p><LazyImageComponent src=\"../images/auto.gif\" alt=\"Markdown\" className=\"header-image\" /></p>\n<h1 className=\"has-text-centered\">ðŸš€ auto ðŸš€</h1>\n<blockquote>\n<p>Automated releases powered by pull request labels</p>\n</blockquote>\n<p>Streamline your release workflow and publish constantly!\n<code>auto</code> is meant to be run in a continuous integration (CI) environment, but all the commands work locally as well.</p>\n<p>The two main problems auto is trying to solve are: release automation and pull request interaction.\nWith the set of tools we provide you can automate every part of contribution!</p>\n<br />\n<p><strong>Release Features:</strong></p>\n<ul>\n<li>Calculate semantic version bumps from PRs</li>\n<li>Publish <Link currentPage={(this && this.props || props).currentPage} to=\"/auto/pages/generated/canary.html\">canaries</Link> (test versions) directly from PRs or locally</li>\n<li>Generate changelogs with fancy headers, authors, and <Link currentPage={(this && this.props || props).currentPage} to=\"/auto/pages/generated/changelog.html#additional-release-notes\">detailed release notes</Link></li>\n<li>Make GitHub releases</li>\n</ul>\n<p><strong>Pull Request Interaction Features:</strong></p>\n<ul>\n<li>Get the labels for a PR</li>\n<li>Set the status of a PR</li>\n<li>Comment on a PR with markdown</li>\n<li>Update the PR body with contextual build metadata</li>\n</ul>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    "],"sourceRoot":""}