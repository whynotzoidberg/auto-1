{"version":3,"sources":["webpack:///./docs/pages/non-npm.md"],"names":["_path","_interopRequireDefault","__webpack_require__","_react","_interopRequireWildcard","Link","props","to","rest","_objectWithoutProperties","includes","default","createElement","_extends","href","path","join","onClick","e","preventDefault","location","URL","window","origin","history","pushState","Location","pathname","hash","query","getLocation","popStateEvent","CustomEvent","detail","dispatchEvent","defaultProps","lazyComponent","provider","_class","_temp","React","Component","[object Object]","args","super","_defineProperty","this","Comp","componentDidMount","state","shouldLoad","then","c","setState","render","children","bind","_jsx","className","_ref3","_ref4","currentPage","target","id","aria-hidden","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","_ref25","_ref26","_ref27","_ref28","_ref29","_ref30","_ref31","_ref32","_ref33","_ref34","_ref35","_ref36","_ref37","_ref38","_ref39","_ref40","_ref41","_ref42","_ref43","_ref44","_ref45","_ref46","_ref47","_ref48","_ref49","_ref50","_ref51","_ref52","_ref53","_ref54","_ref55"],"mappings":"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","file":"non-npm.js","sourcesContent":["\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto/','pages/non-npm.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1>Non-npm Usage</h1>\n<p><code>auto</code> is typically distributed through <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://npmjs.com\" className=\"external-link\">npm</Link> but you can use it with a variety of package management platforms.</p>\n<h2 id=\"installation\">Installation <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#installation\" aria-hidden=\"true\"></Link></h2>\n<p>If you're on some platform other than <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://npmjs.com\" className=\"external-link\">npm</Link> it doesn't make sense to download <code>auto</code> through <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://npmjs.com\" className=\"external-link\">npm</Link>.\nFor these situations we package <code>auto</code> for all major operating systems (<code>linux</code>, <code>osx</code>, <code>windows</code>).</p>\n<p>Simply download the appropriate version for your operating system and make it executable.</p>\n<pre><code className=\"language-sh\"><span className=\"hljs-comment\"># Download a platform specific version of auto</span><br />curl -vkL -o - https://github.com/intuit/auto/releases/download/v7.2.0/auto-linux.gz | gunzip &gt; ~/auto<br /><span className=\"hljs-comment\"># Make auto executable</span><br />chmod a+x ~/auto<br /></code></pre>\n<p>This executable contains all of the official <code>auto</code> plugins so you do not have to download anything extra.\nThis version of <code>auto</code> uses the <Link currentPage={(this && this.props || props).currentPage} to=\"/auto/plugins/git-tag/README.html\">git-tag</Link> plugins as the default instead of <Link currentPage={(this && this.props || props).currentPage} to=\"/auto/plugins/npm/README.html\">npm</Link>.\nIf you specify any plugins this will be overridden.</p>\n<h3 id=\"installation-via-brew-(osx)\">Installation via brew (OSX) <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#installation-via-brew-(osx)\" aria-hidden=\"true\"></Link></h3>\n<p>If you are on OSX you can install <code>auto</code> with brew.</p>\n<pre><code className=\"language-sh\">brew tap intuit/auto https://github.com/intuit/auto<br />brew install auto<br /></code></pre>\n<h2 id=\"configuration\">Configuration <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#configuration\" aria-hidden=\"true\"></Link></h2>\n<p>To configure <code>auto</code> to work with your project you will need to do two things</p>\n<ol>\n<li>Create and configure a <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://github.com/settings/tokens\" className=\"external-link\"><code>GH_TOKEN</code></Link> environment variable</li>\n<li>Create an <code>.autorc</code> for your project</li>\n</ol>\n<h3 id=\"making-an-.autorc\">Making an <code>.autorc</code> <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#making-an-.autorc\" aria-hidden=\"true\"></Link></h3>\n<p>Using <code>auto</code> with any other package manager than <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://npmjs.com\" className=\"external-link\">npm</Link> requires that you create an <Link currentPage={(this && this.props || props).currentPage} to=\"/auto/pages/autorc.html\"><code>.autorc</code></Link> at the root of your project.</p>\n<ol>\n<li>\n<p><code>.autorc</code> - No plugins, <code>shipit</code> doesn't work. Enables <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://intuit.github.io/auto/pages/getting-started.html#detailed-setup\" className=\"external-link\">advanced setup</Link></p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"name\"</span>: <span className=\"hljs-string\">\"Andrew Lisowski\"</span>,<br />  <span className=\"hljs-attr\">\"email\"</span>: <span className=\"hljs-string\">\"lisowski54@gmail.com\"</span>,<br />  <span className=\"hljs-attr\">\"plugins\"</span>: []<br />&#125;<br /></code></pre>\n</li>\n<li>\n<p><code>.autorc</code> - <code>git-tag</code> plugin compatible with any platform. Enables <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://intuit.github.io/auto/pages/generated/shipit.html\" className=\"external-link\"><code>shipit</code> usage</Link></p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"name\"</span>: <span className=\"hljs-string\">\"Andrew Lisowski\"</span>,<br />  <span className=\"hljs-attr\">\"email\"</span>: <span className=\"hljs-string\">\"lisowski54@gmail.com\"</span>,<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<span className=\"hljs-string\">\"git-tag\"</span>]<br />&#125;<br /></code></pre>\n</li>\n<li>\n<p><code>.autorc</code> - With package manager plugin. <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://intuit.github.io/auto/pages/generated/shipit.html\" className=\"external-link\"><code>shipit</code></Link> works, some configuration picked up from package manager package definition files. In the following <code>repo</code>, <code>owner</code>, <code>name</code>, and <code>email</code> are picked up from the <code>pom.xml</code></p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<span className=\"hljs-string\">\"maven\"</span>]<br />&#125;<br /></code></pre>\n</li>\n</ol>\n<h2 id=\"usage\">Usage <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#usage\" aria-hidden=\"true\"></Link></h2>\n<p>Now that you have <code>auto</code> all set up you can use all of it's commands!</p>\n<pre><code className=\"language-sh\">~/auto shipit<br /></code></pre>\n\n        <article className=\"message column is-info\">\n          \n          <div className=\"message-body\">\n      <p>ℹ️ Tip: Using <code>auto</code> locally with an <code>.env</code> file is a great experience. See how <Link currentPage={(this && this.props || props).currentPage} to=\"./getting-started.md#local-.env\">here</Link>.</p>\n\n        </div>\n      </article>\n    <h2 id=\"plugins\">Plugins <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#plugins\" aria-hidden=\"true\"></Link></h2>\n<p>As stated above, all of the official plugins (the ones included in this repo/docs) are included in the binary version of <code>auto</code>.\nHowever you might want to use an unofficial plugin or even write your own.</p>\n<h4 id=\"local-plugins\">Local Plugins <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#local-plugins\" aria-hidden=\"true\"></Link></h4>\n<p>One way to use unofficial plugins in a non-javascript project is to have a directory committed to your project where you store them.</p>\n<p>You could:</p>\n<ul>\n<li>Write your own custom plugins and store them in here</li>\n<li>Copy a plugin from the internet</li>\n</ul>\n<p><strong><code>.autorc</code>:</strong></p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<span className=\"hljs-string\">\"./plugins/custom-plugin.js\"</span>]<br />&#125;<br /></code></pre>\n<h4 id=\"hosted-plugins\">Hosted Plugins <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#hosted-plugins\" aria-hidden=\"true\"></Link></h4>\n<p>If you want to share your custom plugins between projects then you can host them on some SCM (ex: GitHub).\nA plugin just needs to consist of an <code>index.js</code> that implements your plugin. (or it could be as complex as any NPM package)</p>\n<p>Edit your CI build to download these plugins when building.</p>\n<pre><code className=\"language-sh\">mkdir plugins<br />git <span className=\"hljs-built_in\">clone</span> https://github.com/me/custom-plugin plugins/custom-plugin<br /></code></pre>\n<p><strong><code>.autorc</code>:</strong></p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<span className=\"hljs-string\">\"./plugins/custom-plugin\"</span>]<br />&#125;<br /></code></pre>\n<h4 id=\"npm-plugins\">NPM Plugins <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#npm-plugins\" aria-hidden=\"true\"></Link></h4>\n<p>If distributed via NPM you could install those plugins globally through <code>npm</code>:</p>\n<pre><code className=\"language-sh\">npm i -g auto-plugin-my-custom-plugin<br /></code></pre>\n<p><strong><code>.autorc</code>:</strong></p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<span className=\"hljs-string\">\"my-custom-plugin\"</span>]<br />&#125;<br /></code></pre>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    "],"sourceRoot":""}